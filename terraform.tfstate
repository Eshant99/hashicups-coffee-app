{
  "version": 4,
  "terraform_version": "1.7.4",
  "serial": 142,
  "lineage": "970db90c-57f0-d6a7-0b67-523fc30ef15d",
  "outputs": {
    "consul_root_token": {
      "value": "23f6d642-2fc3-01ce-3dcd-844ad638ed81",
      "type": "string",
      "sensitive": true
    },
    "consul_url": {
      "value": "https://consul-quickstart-1710151394779.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud",
      "type": "string"
    },
    "hashicups_url": {
      "value": "http://a23af827c920848fb9583c7246c1ca6a-1154899979.us-east-2.elb.amazonaws.com:8080",
      "type": "string"
    },
    "helm_values_filename": {
      "value": "/home/ubuntu/helm_values_consul-quickstart-1710151394779",
      "type": "string"
    },
    "howto_connect": {
      "value": "  The demo app, HashiCups, Has been installed for you and its components registered in Consul.\n  To access HashiCups navigate to: http://a23af827c920848fb9583c7246c1ca6a-1154899979.us-east-2.elb.amazonaws.com:8080\n\n  To access Consul from your local client run:\n  export CONSUL_HTTP_ADDR=\"https://consul-quickstart-1710151394779.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud\"\n  export CONSUL_HTTP_TOKEN=$(terraform output -raw consul_root_token)\n  \n  You can access your provisioned eks cluster by first running following command\n  export KUBECONFIG=$(terraform output -raw kubeconfig_filename)    \n\n  Consul has been installed in the default namespace. To explore what has been installed run:\n  \n  kubectl get pods\n\n",
      "type": "string"
    },
    "kubeconfig_filename": {
      "value": "/home/ubuntu/kubeconfig_consul-quickstart-1710151394779-eks",
      "type": "string"
    },
    "next_steps": {
      "value": "HashiCups Application will be ready in ~2 minutes. Use 'terraform output -raw consul_root_token' to retrieve the root token.",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": [
              {
                "name": "zone-type",
                "values": [
                  "availability-zone"
                ]
              }
            ],
            "group_names": [
              "us-east-2"
            ],
            "id": "us-east-2",
            "names": [
              "us-east-2a",
              "us-east-2b",
              "us-east-2c"
            ],
            "state": null,
            "zone_ids": [
              "use2-az1",
              "use2-az2",
              "use2-az3"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-2:436973907597:cluster/consul-quickstart-1710151394779-eks",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWVhXRElybUQ2THN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBek1URXhNREV5TURSYUZ3MHpOREF6TURreE1ERTNNRFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIRHIxMSt6MzBrZG00TXFWMDluZGdEZVNwNHN5V2ViNHlybXhac0JkdCtmTnZET2F6SExNa2FzRTMKVEdEekpJQWtlZDZrZVViUzJibWpBVVRSN3RtUy94bnZ3Mk4rQ1V0eWY3SWRkV2w4cGx5N2lML2RYWlNyWmM0WQppSkdMc0pSc0VwenVMclhud2lOQmtBbVpwbkNzSElyMkZsWE5pL2NnWUh6SnJJWmZUSmVMUEJiS1Rxbk5tT1FVCkVUVXErNXhGeXVIRldUdFNWVmVmRWY5Q0Q3akdaNU1WQzlLUXQxazMrbkh3SXY2Mlo5T05XVFdRMmRQNEhRWVkKcWlzM29PVlNBcGVKSXdESENuWk5xbFdBZThzMHZFb1VhMVlqNmJXSHZOdyt2UGJjR3dsWVdlMTU4YmJKb2dFUQp2di83R1VSTGpWZjJOSzVSVEJjVjVxaEFWbEZEQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTml5UDNIZHlvcDhaYWpZWlZWNmc4SFFOeWNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1U5WnRUeHBEOAp4N2JkTUhUbXI4eUI2amdCclZlRXVDYXRKWXlsWDJZNWdIMVRzbTlOeGovMGxXSndxK25tOWVBNlY4bzlNZy9mCmJ2SithdGRoMVUvK1ZpVEdLeVYyQVoyR0ZHenVGNGRBWThzVGxDM1pNRzkralNGWFMxTkI5VVg4aXc0ai9tcGwKdGZFNElZbHVCQ0l6eXIxTzV1a3VuQU5qeGdJWFF4aTZqdlp4UjBUN1Z2eW10eDB1Z3g5Zm1MbmkyU2Y2WGNOSwpEYUdCK3I5RGREa1pNRjFkVjJXWDJ3RzZWUHhyVElrMTJhazZUektXR1pvMmdCSzVwaUZKYlg1RXZrbXE4MnFPCitJa1hxOEpMTVMwY3Zmc1VFOFVma0k0WlAzOXNaVGZDbW1SSXoyRWhqTS9DRmlXR2Y5OUo4NVZBTVJ1UmFyMkEKVi9jbGoxSlVPbHB3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "created_at": "2024-03-11 10:13:02.778 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://E2292ED59FF3871FD49FD47FAE3A346F.gr7.us-east-2.eks.amazonaws.com",
            "id": "consul-quickstart-1710151394779-eks",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/E2292ED59FF3871FD49FD47FAE3A346F"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "consul-quickstart-1710151394779-eks",
            "platform_version": "eks.15",
            "role_arn": "arn:aws:iam::436973907597:role/consul-quickstart-1710151394779-eks20240311101234661000000003",
            "status": "ACTIVE",
            "tags": {},
            "version": "1.25",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-00d6a27c4bed5789c",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0822d6b9dc21ac4a4"
                ],
                "subnet_ids": [
                  "subnet-05387cd6a31b476b9",
                  "subnet-078739c603cd089af",
                  "subnet-0e171660ac85e38fa"
                ],
                "vpc_id": "vpc-05c997ca90a5e76d0"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks",
            "name": "consul-quickstart-1710151394779-eks",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFTSUFXTFBOTVYyRzQ0SzJPVkNZJTJGMjAyNDAzMTElMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMxMVQxMDE5MTZaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TZWN1cml0eS1Ub2tlbj1JUW9KYjNKcFoybHVYMlZqRUNJYUNtVjFMVzV2Y25Sb0xURWlTREJHQWlFQTZFYzJaMTBZVjhkSkpOSks0SHE0eFB1a2dQVjl6MmUzbkdNcSUyQjlDMnJtTUNJUUNnUXd4Y2RXV3hKbnd2Q2wlMkZiOGhFJTJGQ3JOJTJCaUFaZUViTzFQaVFtZkFCSzlDckFCUWdyRUFFYUREUXpOamszTXprd056VTVOeUlNRzJtNkdDMzRpc25NaWp1dEtwMEZ0T1A5RGdFV2NVOWJjc25IbmlzN3hQeXFkMkt0UFFBOGdTWUpidU44OXpSMWFnTUJpRmVzWG1rRUFSRmpBU09kWXBEeEM0NldhR2xqQzRaNzdTSmZJTmk2c1FrTXNGc3FiQ1BJRWRqY1FGNHRVbjZ2WTRyakJoYUJVYXlXOEZ5JTJGNk54YnFSSVdxV2olMkJlR09PRTJXYVhwU1h4SWFwUUEyQ2JQcnRDVldURjJ3dG9jUk9kQ1NOY2Y2WDklMkJHJTJGYW5oUnQlMkZOQVBwc2FkJTJCVVN4JTJGYVZSdEslMkY4cDRqYjRIekglMkZJNmdTQ2tocTZBeFpGazZ2OUI4RllTWkNBZFUxNXBXbTJJaWM1Q3VGandyQml0eURVTjljaVElMkZGTk9WazlneHVSVDQ1dEE0NEh6TWg0eERJRU9lSTlCY05DcHlHcm00eUtkTm02NTBjcWxsU1h3azFMNmIzT1RPTGpwdFdRSWV6eFQ5M2ZYWnBWQyUyRk9IOHlheWUlMkZnVjNBa0MyOSUyQmxqaWFBVFJqbVV1N3J5ZEk2S282NFBLOEdiTkJmTlFqU000WTZCVHdjOU9sazdtRjRDbENGZTVYb1h3RjlDeFNJOVRjViUyRlBEQUVyJTJCamxiVHV3dFJ5bUhpUHRidkQ0cnlIMiUyRnJhOHZESGd0THpEck5EZTlDVjBud0haNmJKclpoZmFTTFdkOE5ZY3JYUlRJJTJGdUdlODNJRUNuaSUyQmJNclBCMkNkdUI2UXdTWDM5dUlMRXo4OHdUcEFQODUxRzRIM29GUiUyQkFwZUtKMDQzSmRtcVFWUTk2NSUyRmkxRzJyRTMlMkZhcTBNc29HeHJKM3BYb3pRWHg3UHdOM3F2MDAlMkI4VGIzbzAlMkZkdHZqbGJBY3RJbGxGSyUyQlRzZkt5Y1BKS1E3SHptTHB4czR5T0RXdGpzNXRuamx4NlVWa2VWZVUyelNvS2RMSlAzRVpOS3lTczBjeGpwUVl1VGZPTTB6TjZWSUh2dE9UVzloWTRjQWNJaFg2YVV1ajU2cm1neVdGRDhiYjZSZnh4VEhjbG1RVzlwdGFRVjBZQiUyRiUyQiUyRkpzTkMzVVRYZUFkTVpJUktzZFloakRKZ2pkZHVicTlnSk1ieDZGbmJ6OFl0aHl3TVRJNW5sU3IzaE16ZE96bWM2ZGFOZEZVNEdiRyUyQnQ0Nm9EOHpPaHhDJTJCdERESWpHNUV5SDhMTlhvbkFRRWxCTk1OZXB1NjhHT3JBQlhjSzFsUmtxdGRnN2N2RTZhZlExWHRtaHY1TmdmZHVsRGYlMkJHZUFVbVpoMTZVaXdMS2JOeXNXczZLUjc5elpJelJFZndZWGY4MjdtQ2phV0hLenhPNyUyRmM3YmROTlBmRjJtcVg1aWg2JTJGQm5pTUR0TVJ5dkZONHFzcmVLbklZaGhhZEVyUDUxSFd5R3FJVERlUmdDbDJvR2lrbVRhdEJwMzV4TUxYQUN6NUNrQW4lMkZibWIlMkJTSk9KNXZHdVZEJTJGZnh3c01lYUJuR21hJTJCRlJXQ0pYVTdRZUxzRVN4bVIxRkJEcjR4MEE0VlphNmglMkJJJTNEJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCUzQngtazhzLWF3cy1pZCZYLUFtei1TaWduYXR1cmU9YmM4Y2Q2YzE1MGZlMDFlOWE1YTYyYWQ0MWUwM2JlMmExZGM2ZWVlOWVjN2YxZjUxZjFmNDE3NDNmYzYyNzhhNw"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcp_consul_cluster",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/hcp\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_hvn_to_hvn_peering": false,
            "cloud_provider": "aws",
            "cluster_id": "consul-quickstart-1710151394779",
            "connect_enabled": true,
            "consul_automatic_upgrades": null,
            "consul_ca_file": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVmRENDQW1TZ0F3SUJBZ0lVS1V6WXQxNCtGWTMrU2x3RmhqZXhDc1BPRk1Rd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0d6RVpNQmNHQTFVRUF4TVFTRU5RSUVSaGRHRndiR0Z1WlNCRFFUQWVGdzB5TkRBek1URXhNREV6TkROYQpGdzB5TlRBek1URXhNREUwTVROYU1EWXhOREF5QmdOVkJBTVRLemd6TXpnM05HVm1MV0l3WTJVdE5EVm1aQzA0Ck5HRTRMVGxrTmpNM01XTTRORGt6WVM1amIyNXpkV3d3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUROTDFsRkxRK2dTVEZWaE9rTmVEM0pFQndOYTU1M0tBS3QvWWpSRGhOR3lKQTlVeklQYnVESwpLeHNFaCtaTW1tTkdIY3hyM2J1eDljbzZIL05aUFlXeEdnTUZuWnIrVFcvRFhYaUJteEsyUXR6TVY3Ri9OWVlMCk9XTk1xV3ZCZUNPOWtGT2NsZUJaS3NHYTJnTkdJQmpZRCszWUJ6ZEdEb21yQUxvdWF6TURFZHBvT2xuOWhpanAKRFhwZktVVW5mRDBaU0JUSmxRM1FVQ0NOeEZrZVFDb05MMlg2U3lzWGZoUFhXZW03NGdtZW94TmVGS2Zrdjk2VwpNRHQzZnBIcFNORVVBcVNHRGxCZ25KbHVLNmxDNUR0am9NOTcveWh4L2RYai9kRGk1bmh1WUt1K0hMVExaM2pZCmNXQXViY1k2NEMwSWY4SkNtcjk5TG8yRjBLU3Y4Z3gxQWdNQkFBR2pnWnd3Z1prd0RnWURWUjBQQVFIL0JBUUQKQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBZzNXUWZleGxtaDlRNklTRVo5d3BOcgpneThyTUI4R0ExVWRJd1FZTUJhQUZCU1JCNmF6ZU9aZFFXMlpOUzZRbW5wMFlsWkZNRFlHQTFVZEVRUXZNQzJDCkt6Z3pNemczTkdWbUxXSXdZMlV0TkRWbVpDMDROR0U0TFRsa05qTTNNV000TkRrellTNWpiMjV6ZFd3d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnSUJBQzlETkh5b0ZHSG0xL2xtYnYzQ0lLdVYyTFg2a2o5eUtybjlsSW45TTJ3cwpQMlZQS05KN1JoN2ZFZnVwTDhBaHkra0RUQlRHelk1SWoyTGFqclpYODZZZHFCczZwM2xKanUvTkFBK1pXa2ZnCkxicHRJSk03SmttbXRIU1NWNTVKbDlPZzcxL1Y3V1l6TXNOUFZ1UC83TDhJY2h1SGV2UGlkSjV1aDlXNjBEMzMKcVZhR3BldU5rSDQyMnVsWTd5UzdDU1RINThBT09aWEQzUk91YTlRTGdSdjU4a3QyYUZIRkN1VFM5RytqVFhLNApmcVdQS09IUE8ydTFCdFI5QzhORGJNcS80ejF1OFhCUTVxdG45T1ZZR25xVDNTUGlxUE9vRDZxMXAyemVqV1JnCkQ1Y3UvOE9yUDFjQ0NsUitDejNVU2FyYnpGMmtKKysxWExUVGM1UnNkN1B2dWszUVZ1VGVPdnV4S0UwWldlekIKM0dBY0NZU3NsaTJHVHpwWUs4Nm5HMjZoS0JHS29Fc1VpN082Q0FseklrZUhFbEFQcGdSM2k1ZGowL0U5dlVyTgpDM2VpS09Lc09UUmZOWGJaOGRUZDJPdk9mbmhxVFArYWJicm5BTW16TTVxWWNhVEVyMGU2UnVvSGk2VG5NZThECnZBVUhMaHhtNExndzFHaTJZL3ZXYm5ibEFjVWZEN2ZBNTYvU3lxRW9udzRnbzlRQWIyYWtMSE5KejE2M0tiTzMKL3NNcy95ekN4V2d6YU1hVmwzY200Wm83Y3hVU2cyaklwb0o3VnhEQVMvWUJkb1lIbis1Mml2ZXJaS3Jnb0RTSgpYRkYxV1JVRUp2eFdGM1YvSzEzSGoyaGZZVkN5THdsWWtpbzIveGhwTUZPTkNSWFg3VlRwUzlwUDIvWHFvbmpmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhRENDQTFDZ0F3SUJBZ0lVTkhiaEpSTllJQzN0Z0pLc2M1VnkrVFRxMU1Bd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF4TUpTRU1nTVRBeElFTkJNQjRYRFRJek1ESXlPREF3TlRFME9Gb1hEVEkyTURJeQpOekF3TlRJeE9Gb3dHekVaTUJjR0ExVUVBeE1RU0VOUUlFUmhkR0Z3YkdGdVpTQkRRVENDQWlJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBS083bTVHQ0VNbkhWeGF4ZWhScUdielhOQlhFMWlxZEdlV0EKcUZUWjJCN0xuSmZoTnk3U2xic0VRZ1F3SGFTbkI5WWJNNUIwK3JUYmNYaFdkZ1BOUEkwQ0NrZWVrNmY5U3J3ZwpHSVR2VVVnbEF1YWVGa0RhOTY3SVhrYWZXVGdkOGdoTDN0eUQ5VGZIRWpuTS85UWJJcjZpL0dZOHMvZHdSN3FFCjVvWXpuRjQ4akQrNWQybXQranF1bE5ncjFDMkpqbjR5Uy90ZXdVVFdWZ1FmdEtLVnJ1cWMzRjJ1NVhnSDVrMXAKZFp3OEdoY1VsT0hTRnlwdUE3ZXlUaGZRRlRBRUlUUzM5VlltSnpsWHdtaGVPOUpiT2VRSFlMazYxMmhaTXFkYgpPbkg5K1crYTNLLzR5dHFGYTdqZmJzVVlsWkJKMlFKNHpvQjVlbm9BaVJyL0pxTHB5cDRUYmpQT2RSUWRjOExoCjlqZkVLU29WTjVaVWlTQ3E0cnFtM2ZQaXVZRTRJWEEwNjZocDBvZ0NwdjBJQjRSakptT2EzZWwyUy9WVDROd2wKazRkYlhyMzhLcCtmV0JSVE1qd2l1M1l3b1FaU284WXNJWkpLWlFDR1JpQStRMWJpTE8xcHVsbUFWR1lOWDdwMApIbWtkT2hnTU1ycWk0cEdQdGdPQmZEWk04NVhpZkRnQmhrL1JkRzBRc3k3cFNVZ25EYjVCQ3l3aEZOVy9ValNBCkRid0Jvc2dnWWRFUkZSTURCT0pmUUdaemJGcmZ1RExsQ1FvZTZVWm9sL3ZSMDlqTW1jcW5lcjF6MERQcTg4Y20KemZoUWo0M0gvUFpnSDBDUGo4aTVYSVpaUzlzWUhmOTlieHpaODVTejM3bUJRMGZMTDBiVDdrODdLekRrdUZleQpZTEtUZUI5M0FnTUJBQUdqZ2Fvd2dhY3dEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CCkFmOHdIUVlEVlIwT0JCWUVGQlNSQjZhemVPWmRRVzJaTlM2UW1ucDBZbFpGTUI4R0ExVWRJd1FZTUJhQUZCK3AKOGlqRzU5RzJiOVBmZTgrVjhEbGQvYzNjTUVRR0ExVWRId1E5TURzd09hQTNvRFdHTTJoMGRIQTZMeTlqY213dQphR0Z6YUdsamIzSndMbk5sY25acFkyVnpMMjltWm14cGJtVXZhR05mTVRBeFgyTmhMbU55YkRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FnRUF4QWNzenQ4aGY5RHlQM1kvY1pHZjE0QUU1UDdKaUo4YXVEVFNuWGFYbGdia3NsZ0QKRENyb1FqYjAwM0pudVFOMTlpYU8vOTJDNlZIbHF3TFN6Q0Q2bXRYd04wYi9wTjZoVDdxWVQxT0FySmZ5SUdpOAo0aE8rRVlSVkhDQ3hBMTdCOWkxNjBzd3FTY3dXZHJDU1lNdjdPVFhFdjUyd1gxUEV5NXlVaXQ2U3R1Q09UbmRZClo0M1hpYkU3bUlKRFkwVTFNNmU1WkhpNXN4YmsyQ3hXUytRYlRqTkl0R0F4UnlmTXB4L3M3aVd6WDNENjR0aXYKZlVLV0t2ak5tdFV0N2daNWUxOXVMWWN5S2FReFRSelVPNEtNOUNDdlF5UmZLcGJkQ2tCSnV4U3BWNVhqMWVKZwpWckNSODBOTzFwSWkwbEhuanR2Q09GcUNHODBuMkFtRndVSWZYaGZJMGhiZnpkVk8wN2Q0UlN6SlFrQWUyL25nCkovZUtzSnBhQXpqUHBnU2N4cU9RRkNsaGpCM3BlQ0NNQWtwZWJybU51UEFacE1OTXhhMEVIeldmdG5NaXl6VlIKVGRzakVMbFloYnZnUGs2c01RQ1Ftc2Q2eC9hSHNxblZNeHVXQjhnRkNsUXlBTE5LSTlRTW1lOWx5RzZaQWgwTwo3azUxR1V1SjBrSU00dm4rWWJoWWdneGZIU1FTYXFWMXNyMG5CeEsyYXk0YlhZb0I1QlorbnpNZWVyQnVtSVRRCmkyeU40eEZwbjVJM3U0MW03NVozNmVSTWdnOWFsNjZnaGNVMEpSWHg3TUMvYjl1d2NLdkNLVlNyMGREc3VhN2kKWHpUcGx3VENOR1NWdFY5blF5ang2SUhubS8vL0k2ZmdtU0dpeUJkUnhORkluTnM3LzArbTY0UU80Qmc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJVENDQXdtZ0F3SUJBZ0lVUlZ3bXEwWGZFYmEwY1JzOVJ4aWxjQzd1Qitvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0hERWFNQmdHQTFVRUF4TVJTR0Z6YUdsRGIzSndJRkp2YjNRZ1EwRXdIaGNOTWpBd05ERTJNVGd4T1RFdwpXaGNOTXpBd05ERTJNVGd4T1RRd1dqQVVNUkl3RUFZRFZRUURFd2xJUXlBeE1ERWdRMEV3Z2dJaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURmeTZpR1VSWXp5RXVBbHBkTklnMlo1UENWYU5JS2pYenQKaU5TeE1GbWJFVktFcUxpYnBVSE02VVkzMVNqZStQUDc0V1E3UzdrSGN3SmJnV051bUdJemhvSFhPQVJTNElqQgpYM3hsMHlSdm5MRTljWTJXUmM0VUdDL1NGTUVSSUtWd3NabkVVVkEweG5CVHp1elNMYlhKU3M2eHdJQmdhZVpTCmNVVHRrYmh5d21ObDVjcHViZ3hQTnZKZEFkTVpPTzZHM3NTNWJrRXN3VjFlcFlUMGdrOGp4ZmdGOGpwOEF5QjEKSG1qcU1pc3J4SFRmTXdBQW1MeGZ3azFDNWFhRlZreTNhVmdMU2p1TWhtS0pIUmdsVERDUWthc0ZoZ1JJNzlSRgo5anQ5dEswRUQxMVZNNkVCM1JWNGhqVWx1M3VSekpWYkQ2OEV3a3FCSXJ3eFc2N2xXenJpUmptME5UVC9kelJLCncyd1JCeEwzNDJ2MlFzeVhoN2hXUUI4TnJRSTJMV1Z1T0c4RGNMYk1pdlBLMUN1c3pZa2RHNjBhWU83aytTbXQKWFJVcStLSnlxcGdUNWZPeWFRa1E2NGlUcUQ5MUdaWmxlWE4xYmVRNSs3MUt5YkR0bk9TYWpvclltVEQwa3lqUAp2ZWE4VjdMOVFPVWxsRVdqNE9YNmdHNVNoNEpZV0liSGphc0FNSUhYVzlubE11UG51eHBNS0pQdXpXZEYzTGRNCjVqblBFSGhiVmkrMUZsSEdidzFVK0JDdDc1V09PV0pFWVMxaXFabGZ3dCtpZzJxdHpXMTBJRmFiWFlBY3l1ZU0KaDFPMDRqblJ3cTRISzBRL1Z2RlY3dXhnbDhMNEtDU3JodE00M3JWZG1UZzBaTnhSN1ZmQ2hBYk5zL21DVnhqNgpoV2VNaTR2Ujl3SURBUUFCbzJNd1lUQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCCi96QWRCZ05WSFE0RUZnUVVINm55S01ibjBiWnYwOTk3ejVYd09WMzl6ZHd3SHdZRFZSMGpCQmd3Rm9BVVR0VXAKamMxQ1dQb3daSXYzYkpqRDVZQ01TYUl3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUhxa2lzQm1tNlNLWlZpTgpGVDFsNHVsb0cxa0NIZWdpQnZGK2svZ2FESGlWdjdGVEhhSWhJU2NBLzFIVHlXbHBYOGU5VnJUVG1IYmdpcDJXCklHUnVrVkNCa3Q3ellBakFlNDJic3llUmlnMWFDUEMrRm9QTkhTNG9GcWFBbDZTOGV4dXk3dTVHV0wrTHpOcW8KNmtjSitzR0N2VFBCcnhmalhKcWZkcDkxVk1mdjltVmZGRE5hTEFyV1RsemhyVUFTb2RoZnlzdTh1R3paNW1iUApZMHhCVFRZcTNVbE0rM09NZk52OVhqbjlldkZBQTRyZk1naUg3TXNYaTNjdUZvZjRrcy96QndlcDVnd29xejBXCmxBNmZvWUJZbkxlZTk5Y1JqV0NIZmF3TW8vMWJyMEpWc0lpYVprL3ZHRDQwWm5NSnJoOWtIQ3J3NU8yaVdYRUgKYWoxRDdDM04wUENxdU1KOU52VStzUlhOOW91M21VdlBPRFEvYUNJTUE0cTJ5TFB4eTBhbzVvbG5kZ3FpSGh0RQptTlVvN3c3Z1hwcTZZK0V0dmJBQTR4VFgwSTFrYm05dnd6TlRaN3dMZktNSHRIcTdGZnI3Z3FXWFUyY1htbDZWCmZyMU1zdjhoVXpEdkgxQmVOeU1GeXpGYkpKZHBmc0tSUGg3MklseGNReHNyNmtJaFkxSzd0RjhsUTVnOVJQbnkKMDkrdjE0T09wQ0c4M0dYdVVFSWxVQlFncUJkVFA5UVZ1N3JNNzBpZjBZaWQ5Snh3aWxoZm5UdDVQblBHQmh4cgphc09uKzNPcG84SDZ2SldMWXlZZWxIZkxVQUhoaTJONEdBUC9MNkIrLzJXUXB5bVE4dzY3S1lveW1yYytLOVpLCjJrdk1vSmJtMmFpYTZZTG5nWksrbi9TS1JuOW8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==",
            "consul_config_file": "eyJhY2wiOnsiZW5hYmxlZCI6dHJ1ZSwiZG93bl9wb2xpY3kiOiJhc3luYy1jYWNoZSIsImRlZmF1bHRfcG9saWN5IjoiZGVueSJ9LCJkYXRhY2VudGVyIjoiY29uc3VsLXF1aWNrc3RhcnQtMTcxMDE1MTM5NDc3OSIsImVuY3J5cHQiOiJaampHbTQvZEpTREl1U3dPa01YRnpRPT0iLCJlbmNyeXB0X3ZlcmlmeV9pbmNvbWluZyI6dHJ1ZSwiZW5jcnlwdF92ZXJpZnlfb3V0Z29pbmciOnRydWUsInNlcnZlciI6ZmFsc2UsImxvZ19sZXZlbCI6IklORk8iLCJ1aSI6dHJ1ZSwicmV0cnlfam9pbiI6WyJjb25zdWwtcXVpY2tzdGFydC0xNzEwMTUxMzk0Nzc5LnByaXZhdGUuY29uc3VsLjg0YTQ4ZjRhLWMzN2QtNDY0NC04NTMwLWVjZWQ2NTg0MzIxYS5hd3MuaGFzaGljb3JwLmNsb3VkIl0sImF1dG9fZW5jcnlwdCI6eyJ0bHMiOnRydWV9LCJ0bHMiOnsiZGVmYXVsdHMiOnsiY2FfZmlsZSI6Ii4vY2EucGVtIiwidmVyaWZ5X291dGdvaW5nIjp0cnVlfX19",
            "consul_private_endpoint_url": "https://consul-quickstart-1710151394779.private.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud",
            "consul_public_endpoint_url": "https://consul-quickstart-1710151394779.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud",
            "consul_root_token_accessor_id": "ae62b080-56eb-a642-a87c-25e68e24623e",
            "consul_root_token_secret_id": "42f7619f-a8ba-71df-0cd8-c0896f983420",
            "consul_snapshot_interval": "24h",
            "consul_snapshot_retention": "30d",
            "consul_version": "v1.14.11",
            "datacenter": "consul-quickstart-1710151394779",
            "hvn_id": "consul-quickstart-1710151394779-hvn",
            "id": "/project/84a48f4a-c37d-4644-8530-eced6584321a/hashicorp.consul.cluster/consul-quickstart-1710151394779",
            "ip_allowlist": [],
            "min_consul_version": "v1.14.11",
            "organization_id": "4e65e5b8-cb54-47f6-a93a-397af9d93c5b",
            "primary_link": null,
            "project_id": "84a48f4a-c37d-4644-8530-eced6584321a",
            "public_endpoint": true,
            "region": "us-west-2",
            "scale": 1,
            "self_link": "/project/84a48f4a-c37d-4644-8530-eced6584321a/hashicorp.consul.cluster/consul-quickstart-1710151394779",
            "size": "X_SMALL",
            "state": "RUNNING",
            "tier": "DEVELOPMENT",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyMTAwMDAwMDAwMDAwLCJkZWZhdWx0IjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MjEwMDAwMDAwMDAwMCwicmVhZCI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjIxMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "hcp_hvn.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcp_consul_cluster_root_token",
      "name": "token",
      "provider": "provider[\"registry.terraform.io/hashicorp/hcp\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "accessor_id": "3931ecd7-4725-be08-61f1-de21d5175684",
            "cluster_id": "/project/84a48f4a-c37d-4644-8530-eced6584321a/hashicorp.consul.cluster/consul-quickstart-1710151394779",
            "id": "3931ecd7-4725-be08-61f1-de21d5175684",
            "kubernetes_secret": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: consul-quickstart-1710151394779-bootstrap-token\ntype: Opaque\ndata:\n  token: MjNmNmQ2NDItMmZjMy0wMWNlLTNkY2QtODQ0YWQ2MzhlZDgx",
            "project_id": null,
            "secret_id": "23f6d642-2fc3-01ce-3dcd-844ad638ed81",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlZmF1bHQiOjMwMDAwMDAwMDAwMCwiZGVsZXRlIjozMDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "hcp_consul_cluster.main",
            "hcp_hvn.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcp_hvn",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/hcp\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cidr_block": "172.25.32.0/20",
            "cloud_provider": "aws",
            "created_at": "2024-03-11T10:12:35.000Z",
            "hvn_id": "consul-quickstart-1710151394779-hvn",
            "id": "/project/84a48f4a-c37d-4644-8530-eced6584321a/hashicorp.network.hvn/consul-quickstart-1710151394779-hvn",
            "organization_id": "4e65e5b8-cb54-47f6-a93a-397af9d93c5b",
            "project_id": "84a48f4a-c37d-4644-8530-eced6584321a",
            "provider_account_id": "402203363764",
            "region": "us-west-2",
            "self_link": "/project/84a48f4a-c37d-4644-8530-eced6584321a/hashicorp.network.hvn/consul-quickstart-1710151394779-hvn",
            "state": "STABLE",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlZmF1bHQiOjYwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwicmVhZCI6NjAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.demo_app[0]",
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "manifests",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  type: ClusterIP\n  ports:\n    - port: 3000\n      targetPort: 3000\n  selector:\n    app: frontend",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: frontend\nautomountServiceAccountToken: true",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: frontend-nginx-config\ndata:\n  nginx.conf: |\n    server {\n      listen 3000;\n      server_name localhost;\n\n      server_tokens off;\n\n      gzip on;\n      gzip_proxied any;\n      gzip_comp_level 4;\n      gzip_types text/css application/javascript image/svg+xml;\n\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection 'upgrade';\n      proxy_set_header Host $host;\n\n      location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n      }\n\n      location /api {\n        proxy_pass http://public-api:8080;\n      }\n    }",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: \"http\"",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: \"v1\"\n    spec:\n      serviceAccountName: frontend\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend-nginx:v1.0.9\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 3000\n          env:\n            - name: NEXT_PUBLIC_PUBLIC_API_URL\n              value: \"/\"\n            - name: NEXT_PUBLIC_FOOTER_FLAG\n              value: \"HashiCups-v1\"\n          volumeMounts:\n            - name: frontend-nginx-config\n              mountPath: /etc/nginx/conf.d/\n      volumes:\n        - name: frontend-nginx-config\n          configMap:\n            name: frontend-nginx-config\n            items:\n              - key: nginx.conf\n                path: default.conf",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-v2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: \"v2\"\n    spec:\n      serviceAccountName: frontend\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend-nginx:v1.0.9\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 3000\n          env:\n            - name: NEXT_PUBLIC_PUBLIC_API_URL\n              value: \"/\"\n            - name: NEXT_PUBLIC_FOOTER_FLAG\n              value: \"HashiCups-v2\"\n          volumeMounts:\n            - name: frontend-nginx-config\n              mountPath: /etc/nginx/conf.d/\n      volumes:\n        - name: frontend-nginx-config\n          configMap:\n            name: frontend-nginx-config\n            items:\n              - key: nginx.conf\n                path: default.conf",
              "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n    - port: 8080\n      protocol: http\n      services:\n        - name: nginx\n          hosts: [\"*\"]",
              "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: nginx\nspec:\n  # Name of the destination service affected by this ServiceIntentions entry\n  destination:\n    name: nginx\n  # The set of traffic sources affected by this ServiceIntentions entry\n  sources:\n    - name: ingress-gateway\n      action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n    - name: nginx\n      action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  destination:\n    name: public-api\n  sources:\n    - name: nginx\n      action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n    - name: public-api\n      action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api-db\nspec:\n  destination:\n    name: product-api-db\n  sources:\n    - name: product-api\n      action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n    - name: public-api\n      action: allow",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  type: ClusterIP\n  ports:\n    - port: 80\n      targetPort: 80\n  selector:\n    app: nginx",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config\ndata:\n  nginx.conf: |\n    events {}\n    http {\n      include /etc/nginx/conf.d/*.conf;\n\n      server {\n        server_name localhost;\n        listen 80 default_server;\n\n        proxy_http_version 1.1;\n\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        proxy_temp_file_write_size 64k;\n        proxy_connect_timeout 10080s;\n        proxy_send_timeout 10080;\n        proxy_read_timeout 10080;\n        proxy_buffer_size 64k;\n        proxy_buffers 16 32k;\n        proxy_busy_buffers_size 64k;\n        proxy_redirect off;\n        proxy_request_buffering off;\n        proxy_buffering off;\n\n        location / {\n          proxy_pass http://frontend:3000;\n        }\n\n        location /static {\n          proxy_cache_valid 60m;\n          proxy_pass http://frontend:3000;\n        }\n\n        location /api {\n          proxy_pass http://public-api:8080;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n          root   /usr/share/nginx/html;\n        }\n      }\n    }",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nginx\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: nginx\nspec:\n  protocol: \"http\"",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: nginx\n      app: nginx\n  template:\n    metadata:\n      labels:\n        service: nginx\n        app: nginx\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: nginx\n      containers:\n        - name: nginx\n          image: nginx:stable-alpine\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: nginx-config\n              mountPath: /etc/nginx\n      volumes:\n        - name: nginx-config\n          configMap:\n            name: nginx-config\n            items:\n              - key: nginx.conf\n                path: nginx.conf",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  selector:\n    app: payments\n  ports:\n    - name: http\n      protocol: TCP\n      port: 8080\n      targetPort: 8080",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: payments\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: \"http\"",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payments\n  labels:\n    app: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      labels:\n        app: payments\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: payments\n      containers:\n        - name: payments\n          image: hashicorpdemoapp/payments:v0.0.16\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-api-db\n  labels:\n    app: product-api-db\nspec:\n  type: ClusterIP\n  ports:\n    - port: 5432\n      targetPort: 5432\n  selector:\n    app: product-api-db",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api-db\nspec:\n  protocol: \"tcp\"",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: product-api-db\nautomountServiceAccountToken: true",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: product-api-db\n      app: product-api-db\n  template:\n    metadata:\n      labels:\n        service: product-api-db\n        app: product-api-db\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: product-api-db\n      containers:\n        - name: product-api-db\n          image: hashicorpdemoapp/product-api-db:v0.0.20\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: products\n            - name: POSTGRES_USER\n              value: postgres\n            - name: POSTGRES_PASSWORD\n              value: password\n          volumeMounts:\n            - mountPath: \"/var/lib/postgresql/data\"\n              name: \"pgdata\"\n      volumes:\n        - name: pgdata\n          emptyDir: {}",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  selector:\n    app: product-api\n  ports:\n    - name: http\n      protocol: TCP\n      port: 9090\n      targetPort: 9090",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: product-api\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: \"http\"",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-configmap\ndata:\n  config: |\n    {\n      \"db_connection\": \"host=product-api-db port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api\n  labels:\n    app: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      labels:\n        app: product-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: product-api\n      volumes:\n        - name: config\n          configMap:\n            name: db-configmap\n            items:\n              - key: config\n                path: conf.json\n      containers:\n        - name: product-api\n          image: hashicorpdemoapp/product-api:v0.0.20\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 9090\n            - containerPort: 9103\n          env:\n            - name: \"CONFIG_FILE\"\n              value: \"/config/conf.json\"\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 9090\n            initialDelaySeconds: 15\n            timeoutSeconds: 1\n            periodSeconds: 10\n            failureThreshold: 30\n          volumeMounts:\n            - name: config\n              mountPath: /config\n              readOnly: true",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-api\n  labels:\n    app: public-api\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: 8080\n  selector:\n    app: public-api",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: public-api\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: \"http\"",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: public-api\n      app: public-api\n  template:\n    metadata:\n      labels:\n        service: public-api\n        app: public-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: public-api\n      containers:\n        - name: public-api\n          image: hashicorpdemoapp/public-api:v0.0.6\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n          env:\n            - name: BIND_ADDRESS\n              value: \":8080\"\n            - name: PRODUCT_API_URI\n              value: \"http://product-api:9090\"\n            - name: PAYMENT_API_URI\n              value: \"http://payments:1800\"\n        - name: jaeger-agent\n          image: jaegertracing/jaeger-agent:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 5775\n              name: zk-compact-trft\n              protocol: UDP\n            - containerPort: 5778\n              name: config-rest\n              protocol: TCP\n            - containerPort: 6831\n              name: jg-compact-trft\n              protocol: UDP\n            - containerPort: 6832\n              name: jg-binary-trft\n              protocol: UDP\n            - containerPort: 14271\n              name: admin-http\n              protocol: TCP\n          args:\n            - --reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250\n            - --reporter.type=grpc"
            ],
            "id": "b8b56ec3f0676849d233171c2443d2b481788b2371ee763cd06a82a6d8630cc4",
            "manifests": {
              "/api/v1/configmaps/db-configmap": "apiVersion: v1\ndata:\n  config: |-\n    {\n      \"db_connection\": \"host=product-api-db port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }\nkind: ConfigMap\nmetadata:\n  name: db-configmap\n",
              "/api/v1/configmaps/frontend-nginx-config": "apiVersion: v1\ndata:\n  nginx.conf: |-\n    server {\n      listen 3000;\n      server_name localhost;\n\n      server_tokens off;\n\n      gzip on;\n      gzip_proxied any;\n      gzip_comp_level 4;\n      gzip_types text/css application/javascript image/svg+xml;\n\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection 'upgrade';\n      proxy_set_header Host $host;\n\n      location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n      }\n\n      location /api {\n        proxy_pass http://public-api:8080;\n      }\n    }\nkind: ConfigMap\nmetadata:\n  name: frontend-nginx-config\n",
              "/api/v1/configmaps/nginx-config": "apiVersion: v1\ndata:\n  nginx.conf: |-\n    events {}\n    http {\n      include /etc/nginx/conf.d/*.conf;\n\n      server {\n        server_name localhost;\n        listen 80 default_server;\n\n        proxy_http_version 1.1;\n\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        proxy_temp_file_write_size 64k;\n        proxy_connect_timeout 10080s;\n        proxy_send_timeout 10080;\n        proxy_read_timeout 10080;\n        proxy_buffer_size 64k;\n        proxy_buffers 16 32k;\n        proxy_busy_buffers_size 64k;\n        proxy_redirect off;\n        proxy_request_buffering off;\n        proxy_buffering off;\n\n        location / {\n          proxy_pass http://frontend:3000;\n        }\n\n        location /static {\n          proxy_cache_valid 60m;\n          proxy_pass http://frontend:3000;\n        }\n\n        location /api {\n          proxy_pass http://public-api:8080;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n          root   /usr/share/nginx/html;\n        }\n      }\n    }\nkind: ConfigMap\nmetadata:\n  name: nginx-config\n",
              "/api/v1/serviceaccounts/frontend": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: frontend\n",
              "/api/v1/serviceaccounts/nginx": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: nginx\n",
              "/api/v1/serviceaccounts/payments": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: payments\n",
              "/api/v1/serviceaccounts/product-api": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: product-api\n",
              "/api/v1/serviceaccounts/product-api-db": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: product-api-db\n",
              "/api/v1/serviceaccounts/public-api": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: public-api\n",
              "/api/v1/services/frontend": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  ports:\n  - port: 3000\n    targetPort: 3000\n  selector:\n    app: frontend\n  type: ClusterIP\n",
              "/api/v1/services/nginx": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: nginx\n  type: ClusterIP\n",
              "/api/v1/services/payments": "apiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  ports:\n  - name: http\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: payments\n",
              "/api/v1/services/product-api": "apiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  ports:\n  - name: http\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: product-api\n",
              "/api/v1/services/product-api-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: product-api-db\n  name: product-api-db\nspec:\n  ports:\n  - port: 5432\n    targetPort: 5432\n  selector:\n    app: product-api-db\n  type: ClusterIP\n",
              "/api/v1/services/public-api": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: public-api\n  name: public-api\nspec:\n  ports:\n  - port: 8080\n    targetPort: 8080\n  selector:\n    app: public-api\n  type: ClusterIP\n",
              "/apis/apps/v1/deployments/frontend": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n      service: frontend\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: v1\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: frontend\n        service: frontend\n    spec:\n      containers:\n      - env:\n        - name: NEXT_PUBLIC_PUBLIC_API_URL\n          value: /\n        - name: NEXT_PUBLIC_FOOTER_FLAG\n          value: HashiCups-v1\n        image: hashicorpdemoapp/frontend-nginx:v1.0.9\n        imagePullPolicy: Always\n        name: frontend\n        ports:\n        - containerPort: 3000\n        volumeMounts:\n        - mountPath: /etc/nginx/conf.d/\n          name: frontend-nginx-config\n      serviceAccountName: frontend\n      volumes:\n      - configMap:\n          items:\n          - key: nginx.conf\n            path: default.conf\n          name: frontend-nginx-config\n        name: frontend-nginx-config\n",
              "/apis/apps/v1/deployments/frontend-v2": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-v2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n      service: frontend\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: v2\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: frontend\n        service: frontend\n    spec:\n      containers:\n      - env:\n        - name: NEXT_PUBLIC_PUBLIC_API_URL\n          value: /\n        - name: NEXT_PUBLIC_FOOTER_FLAG\n          value: HashiCups-v2\n        image: hashicorpdemoapp/frontend-nginx:v1.0.9\n        imagePullPolicy: Always\n        name: frontend\n        ports:\n        - containerPort: 3000\n        volumeMounts:\n        - mountPath: /etc/nginx/conf.d/\n          name: frontend-nginx-config\n      serviceAccountName: frontend\n      volumes:\n      - configMap:\n          items:\n          - key: nginx.conf\n            path: default.conf\n          name: frontend-nginx-config\n        name: frontend-nginx-config\n",
              "/apis/apps/v1/deployments/nginx": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n      service: nginx\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: nginx\n        service: nginx\n    spec:\n      containers:\n      - image: nginx:stable-alpine\n        name: nginx\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - mountPath: /etc/nginx\n          name: nginx-config\n      serviceAccountName: nginx\n      volumes:\n      - configMap:\n          items:\n          - key: nginx.conf\n            path: nginx.conf\n          name: nginx-config\n        name: nginx-config\n",
              "/apis/apps/v1/deployments/payments": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: payments\n  name: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n      labels:\n        app: payments\n    spec:\n      containers:\n      - image: hashicorpdemoapp/payments:v0.0.16\n        imagePullPolicy: Always\n        name: payments\n        ports:\n        - containerPort: 8080\n      serviceAccountName: payments\n",
              "/apis/apps/v1/deployments/product-api": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: product-api\n  name: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: product-api\n    spec:\n      containers:\n      - env:\n        - name: CONFIG_FILE\n          value: /config/conf.json\n        image: hashicorpdemoapp/product-api:v0.0.20\n        imagePullPolicy: Always\n        livenessProbe:\n          failureThreshold: 30\n          httpGet:\n            path: /health\n            port: 9090\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 1\n        name: product-api\n        ports:\n        - containerPort: 9090\n        - containerPort: 9103\n        volumeMounts:\n        - mountPath: /config\n          name: config\n          readOnly: true\n      serviceAccountName: product-api\n      volumes:\n      - configMap:\n          items:\n          - key: config\n            path: conf.json\n          name: db-configmap\n        name: config\n",
              "/apis/apps/v1/deployments/product-api-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api-db\n      service: product-api-db\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: product-api-db\n        service: product-api-db\n    spec:\n      containers:\n      - env:\n        - name: POSTGRES_DB\n          value: products\n        - name: POSTGRES_USER\n          value: postgres\n        - name: POSTGRES_PASSWORD\n          value: password\n        image: hashicorpdemoapp/product-api-db:v0.0.20\n        imagePullPolicy: Always\n        name: product-api-db\n        ports:\n        - containerPort: 5432\n        volumeMounts:\n        - mountPath: /var/lib/postgresql/data\n          name: pgdata\n      serviceAccountName: product-api-db\n      volumes:\n      - emptyDir: {}\n        name: pgdata\n",
              "/apis/apps/v1/deployments/public-api": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: public-api\n      service: public-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: public-api\n        service: public-api\n    spec:\n      containers:\n      - env:\n        - name: BIND_ADDRESS\n          value: :8080\n        - name: PRODUCT_API_URI\n          value: http://product-api:9090\n        - name: PAYMENT_API_URI\n          value: http://payments:1800\n        image: hashicorpdemoapp/public-api:v0.0.6\n        imagePullPolicy: Always\n        name: public-api\n        ports:\n        - containerPort: 8080\n      - args:\n        - --reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250\n        - --reporter.type=grpc\n        image: jaegertracing/jaeger-agent:latest\n        imagePullPolicy: IfNotPresent\n        name: jaeger-agent\n        ports:\n        - containerPort: 5775\n          name: zk-compact-trft\n          protocol: UDP\n        - containerPort: 5778\n          name: config-rest\n          protocol: TCP\n        - containerPort: 6831\n          name: jg-compact-trft\n          protocol: UDP\n        - containerPort: 6832\n          name: jg-binary-trft\n          protocol: UDP\n        - containerPort: 14271\n          name: admin-http\n          protocol: TCP\n      serviceAccountName: public-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/ingressgateways/ingress-gateway": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n  - port: 8080\n    protocol: http\n    services:\n    - hosts:\n      - '*'\n      name: nginx\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/frontend": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/nginx": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: nginx\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/payments": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/product-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/product-api-db": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api-db\nspec:\n  protocol: tcp\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/public-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/frontend": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n  - action: allow\n    name: nginx\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/nginx": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: nginx\nspec:\n  destination:\n    name: nginx\n  sources:\n  - action: allow\n    name: ingress-gateway\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/payments": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n  - action: allow\n    name: public-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/product-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n  - action: allow\n    name: public-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/product-api-db": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api-db\nspec:\n  destination:\n    name: product-api-db\n  sources:\n  - action: allow\n    name: product-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/public-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  destination:\n    name: public-api\n  sources:\n  - action: allow\n    name: nginx\n"
            },
            "pattern": ".terraform/modules/demo_app/modules/k8s-demo-app/services/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.demo_app[0]",
      "mode": "data",
      "type": "kubernetes_service",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/consul-ingress-gateway",
            "metadata": [
              {
                "annotations": {
                  "meta.helm.sh/release-name": "consul",
                  "meta.helm.sh/release-namespace": "default"
                },
                "generation": 0,
                "labels": {
                  "app": "consul",
                  "app.kubernetes.io/managed-by": "Helm",
                  "chart": "consul-helm",
                  "component": "ingress-gateway",
                  "heritage": "Helm",
                  "ingress-gateway-name": "consul-ingress-gateway",
                  "release": "consul"
                },
                "name": "consul-ingress-gateway",
                "namespace": "default",
                "resource_version": "1820",
                "uid": "23af827c-9208-48fb-9583-c7246c1ca6ae"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.46.220",
                "cluster_ips": [
                  "172.20.46.220"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "gateway-0",
                    "node_port": 30463,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "consul",
                  "component": "ingress-gateway",
                  "ingress-gateway-name": "consul-ingress-gateway",
                  "release": "consul"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "LoadBalancer"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "a23af827c920848fb9583c7246c1ca6a-1154899979.us-east-2.elb.amazonaws.com",
                        "ip": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.demo_app[0]",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "applications",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/frontend",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "393ef4200a9e73d253bf5005e00a2827b0ef5ad953d99710c055a6f30231f297",
            "live_uid": "4ee813fb-6415-4a06-81dc-d5efde346ed2",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4ee813fb-6415-4a06-81dc-d5efde346ed2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  type: ClusterIP\n  ports:\n    - port: 3000\n      targetPort: 3000\n  selector:\n    app: frontend",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  ports:\n  - port: 3000\n    targetPort: 3000\n  selector:\n    app: frontend\n  type: ClusterIP\n",
            "yaml_incluster": "393ef4200a9e73d253bf5005e00a2827b0ef5ad953d99710c055a6f30231f297"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/frontend",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "8d869e2b2ce8f752f35e25be3939e530428c39f6d10538c50efc964e4481c087",
            "live_uid": "f5277d64-4c82-46f7-b59b-4a32ca43364f",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f5277d64-4c82-46f7-b59b-4a32ca43364f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: frontend\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: frontend\n",
            "yaml_incluster": "8d869e2b2ce8f752f35e25be3939e530428c39f6d10538c50efc964e4481c087"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/frontend-nginx-config",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "2b257032b488bc357b631fd05d16cd4b374585b31e6c42e0e7ad3d582be95a8e",
            "live_uid": "d389a1b3-7ee8-4bd7-b45f-9706cb62348f",
            "name": "frontend-nginx-config",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d389a1b3-7ee8-4bd7-b45f-9706cb62348f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: frontend-nginx-config\ndata:\n  nginx.conf: |\n    server {\n      listen 3000;\n      server_name localhost;\n\n      server_tokens off;\n\n      gzip on;\n      gzip_proxied any;\n      gzip_comp_level 4;\n      gzip_types text/css application/javascript image/svg+xml;\n\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection 'upgrade';\n      proxy_set_header Host $host;\n\n      location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n      }\n\n      location /api {\n        proxy_pass http://public-api:8080;\n      }\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  nginx.conf: |-\n    server {\n      listen 3000;\n      server_name localhost;\n\n      server_tokens off;\n\n      gzip on;\n      gzip_proxied any;\n      gzip_comp_level 4;\n      gzip_types text/css application/javascript image/svg+xml;\n\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection 'upgrade';\n      proxy_set_header Host $host;\n\n      location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n      }\n\n      location /api {\n        proxy_pass http://public-api:8080;\n      }\n    }\nkind: ConfigMap\nmetadata:\n  name: frontend-nginx-config\n",
            "yaml_incluster": "2b257032b488bc357b631fd05d16cd4b374585b31e6c42e0e7ad3d582be95a8e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/frontend",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "3fd6c5ed79dcf7914e0b8bde359f21d644f45dbb55f8f4debdfe21a042b62416",
            "live_uid": "b61c950b-8545-4bf4-ae3e-afb5f2f2c757",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b61c950b-8545-4bf4-ae3e-afb5f2f2c757",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: http\n",
            "yaml_incluster": "3fd6c5ed79dcf7914e0b8bde359f21d644f45dbb55f8f4debdfe21a042b62416"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/frontend",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "b5336330517b5c32ab125642bf0b9a142a5336e18b0c06db8d3c30863f755d1f",
            "live_uid": "ea9f00ec-1d1c-4b37-9496-5f16766ebbc5",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ea9f00ec-1d1c-4b37-9496-5f16766ebbc5",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: \"v1\"\n    spec:\n      serviceAccountName: frontend\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend-nginx:v1.0.9\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 3000\n          env:\n            - name: NEXT_PUBLIC_PUBLIC_API_URL\n              value: \"/\"\n            - name: NEXT_PUBLIC_FOOTER_FLAG\n              value: \"HashiCups-v1\"\n          volumeMounts:\n            - name: frontend-nginx-config\n              mountPath: /etc/nginx/conf.d/\n      volumes:\n        - name: frontend-nginx-config\n          configMap:\n            name: frontend-nginx-config\n            items:\n              - key: nginx.conf\n                path: default.conf",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n      service: frontend\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: v1\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: frontend\n        service: frontend\n    spec:\n      containers:\n      - env:\n        - name: NEXT_PUBLIC_PUBLIC_API_URL\n          value: /\n        - name: NEXT_PUBLIC_FOOTER_FLAG\n          value: HashiCups-v1\n        image: hashicorpdemoapp/frontend-nginx:v1.0.9\n        imagePullPolicy: Always\n        name: frontend\n        ports:\n        - containerPort: 3000\n        volumeMounts:\n        - mountPath: /etc/nginx/conf.d/\n          name: frontend-nginx-config\n      serviceAccountName: frontend\n      volumes:\n      - configMap:\n          items:\n          - key: nginx.conf\n            path: default.conf\n          name: frontend-nginx-config\n        name: frontend-nginx-config\n",
            "yaml_incluster": "b5336330517b5c32ab125642bf0b9a142a5336e18b0c06db8d3c30863f755d1f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 5,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/frontend-v2",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "fb4a59e7b7dbf908426f8b22beee61394106c029d326b494e82438f7e18a4d25",
            "live_uid": "dc710426-c219-42df-99f6-4ce23d3a5d18",
            "name": "frontend-v2",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "dc710426-c219-42df-99f6-4ce23d3a5d18",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-v2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: \"v2\"\n    spec:\n      serviceAccountName: frontend\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend-nginx:v1.0.9\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 3000\n          env:\n            - name: NEXT_PUBLIC_PUBLIC_API_URL\n              value: \"/\"\n            - name: NEXT_PUBLIC_FOOTER_FLAG\n              value: \"HashiCups-v2\"\n          volumeMounts:\n            - name: frontend-nginx-config\n              mountPath: /etc/nginx/conf.d/\n      volumes:\n        - name: frontend-nginx-config\n          configMap:\n            name: frontend-nginx-config\n            items:\n              - key: nginx.conf\n                path: default.conf",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-v2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n      service: frontend\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        consul.hashicorp.com/service-meta-version: v2\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: frontend\n        service: frontend\n    spec:\n      containers:\n      - env:\n        - name: NEXT_PUBLIC_PUBLIC_API_URL\n          value: /\n        - name: NEXT_PUBLIC_FOOTER_FLAG\n          value: HashiCups-v2\n        image: hashicorpdemoapp/frontend-nginx:v1.0.9\n        imagePullPolicy: Always\n        name: frontend\n        ports:\n        - containerPort: 3000\n        volumeMounts:\n        - mountPath: /etc/nginx/conf.d/\n          name: frontend-nginx-config\n      serviceAccountName: frontend\n      volumes:\n      - configMap:\n          items:\n          - key: nginx.conf\n            path: default.conf\n          name: frontend-nginx-config\n        name: frontend-nginx-config\n",
            "yaml_incluster": "fb4a59e7b7dbf908426f8b22beee61394106c029d326b494e82438f7e18a4d25"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 6,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/ingressgateways/ingress-gateway",
            "ignore_fields": null,
            "kind": "IngressGateway",
            "live_manifest_incluster": "9acbff9af48b075a2e13c776d509b09c8daf6514d111c6b2e4a28fbb58ff1731",
            "live_uid": "07d08b8a-f444-4efa-ab61-1810d3673f9a",
            "name": "ingress-gateway",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "07d08b8a-f444-4efa-ab61-1810d3673f9a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n    - port: 8080\n      protocol: http\n      services:\n        - name: nginx\n          hosts: [\"*\"]",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n  - port: 8080\n    protocol: http\n    services:\n    - hosts:\n      - '*'\n      name: nginx\n",
            "yaml_incluster": "9acbff9af48b075a2e13c776d509b09c8daf6514d111c6b2e4a28fbb58ff1731"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 7,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/nginx",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "93b0795822e2284d22c2b05e62953e0413ce93fa1c2ee9ec15c00a49dda835d9",
            "live_uid": "4b11c91d-e87d-42bc-83a6-3d5f361165ee",
            "name": "nginx",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4b11c91d-e87d-42bc-83a6-3d5f361165ee",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: nginx\nspec:\n  # Name of the destination service affected by this ServiceIntentions entry\n  destination:\n    name: nginx\n  # The set of traffic sources affected by this ServiceIntentions entry\n  sources:\n    - name: ingress-gateway\n      action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: nginx\nspec:\n  destination:\n    name: nginx\n  sources:\n  - action: allow\n    name: ingress-gateway\n",
            "yaml_incluster": "93b0795822e2284d22c2b05e62953e0413ce93fa1c2ee9ec15c00a49dda835d9"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 8,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/frontend",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "84955d8e342b1dc84d466edd6e4c3f41d9720b7225baf54387691480aa74145f",
            "live_uid": "9ff8245e-5110-41fe-a353-bf2018e5809d",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9ff8245e-5110-41fe-a353-bf2018e5809d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n    - name: nginx\n      action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n  - action: allow\n    name: nginx\n",
            "yaml_incluster": "84955d8e342b1dc84d466edd6e4c3f41d9720b7225baf54387691480aa74145f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 9,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/public-api",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "2cf692f8d92dff0e52f27112509a1c7c46530dda5ac1c54b60331a0151544186",
            "live_uid": "a41cbf2b-10f2-431e-9844-c9ceea9c872a",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a41cbf2b-10f2-431e-9844-c9ceea9c872a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  destination:\n    name: public-api\n  sources:\n    - name: nginx\n      action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  destination:\n    name: public-api\n  sources:\n  - action: allow\n    name: nginx\n",
            "yaml_incluster": "2cf692f8d92dff0e52f27112509a1c7c46530dda5ac1c54b60331a0151544186"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 10,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/product-api",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "d357d58e735916176a5699cfd07d4941fd1bbc5ecaadb7c515dd0df7d76377ba",
            "live_uid": "05c2b215-459c-4413-99ae-3a3a466ffefe",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "05c2b215-459c-4413-99ae-3a3a466ffefe",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n    - name: public-api\n      action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n  - action: allow\n    name: public-api\n",
            "yaml_incluster": "d357d58e735916176a5699cfd07d4941fd1bbc5ecaadb7c515dd0df7d76377ba"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 11,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/product-api-db",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "1513270f6c3b422ec0687a0888b7ba3341cbcb6b4cb37b12afd1fabcba5c029d",
            "live_uid": "d3e9f2bc-c7be-4d8a-962a-11191654ad32",
            "name": "product-api-db",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d3e9f2bc-c7be-4d8a-962a-11191654ad32",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api-db\nspec:\n  destination:\n    name: product-api-db\n  sources:\n    - name: product-api\n      action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api-db\nspec:\n  destination:\n    name: product-api-db\n  sources:\n  - action: allow\n    name: product-api\n",
            "yaml_incluster": "1513270f6c3b422ec0687a0888b7ba3341cbcb6b4cb37b12afd1fabcba5c029d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 12,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/payments",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "91e77d4b48cd16013ab5e13449a23a7d81a80d25e80ec3c912991549cefcb590",
            "live_uid": "7326876b-62e1-4c94-8128-a2f43c4d4fa3",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7326876b-62e1-4c94-8128-a2f43c4d4fa3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n    - name: public-api\n      action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n  - action: allow\n    name: public-api\n",
            "yaml_incluster": "91e77d4b48cd16013ab5e13449a23a7d81a80d25e80ec3c912991549cefcb590"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 13,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/nginx",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "3b85650edc11d27785ff11916613161ab022041de84c391fd6d4dc4456953321",
            "live_uid": "b64b88ad-693a-4ff0-b745-11c777b68325",
            "name": "nginx",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b64b88ad-693a-4ff0-b745-11c777b68325",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  type: ClusterIP\n  ports:\n    - port: 80\n      targetPort: 80\n  selector:\n    app: nginx",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: nginx\n  type: ClusterIP\n",
            "yaml_incluster": "3b85650edc11d27785ff11916613161ab022041de84c391fd6d4dc4456953321"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 14,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/nginx-config",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "c19ab8f9af6a42cb667b915ae78c8c3ce44e6c3b7ff2242d54a2f1b1cdae5cd4",
            "live_uid": "7ddfef9a-28c0-4c6e-8a23-6539e8171b02",
            "name": "nginx-config",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7ddfef9a-28c0-4c6e-8a23-6539e8171b02",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config\ndata:\n  nginx.conf: |\n    events {}\n    http {\n      include /etc/nginx/conf.d/*.conf;\n\n      server {\n        server_name localhost;\n        listen 80 default_server;\n\n        proxy_http_version 1.1;\n\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        proxy_temp_file_write_size 64k;\n        proxy_connect_timeout 10080s;\n        proxy_send_timeout 10080;\n        proxy_read_timeout 10080;\n        proxy_buffer_size 64k;\n        proxy_buffers 16 32k;\n        proxy_busy_buffers_size 64k;\n        proxy_redirect off;\n        proxy_request_buffering off;\n        proxy_buffering off;\n\n        location / {\n          proxy_pass http://frontend:3000;\n        }\n\n        location /static {\n          proxy_cache_valid 60m;\n          proxy_pass http://frontend:3000;\n        }\n\n        location /api {\n          proxy_pass http://public-api:8080;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n          root   /usr/share/nginx/html;\n        }\n      }\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  nginx.conf: |-\n    events {}\n    http {\n      include /etc/nginx/conf.d/*.conf;\n\n      server {\n        server_name localhost;\n        listen 80 default_server;\n\n        proxy_http_version 1.1;\n\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        proxy_temp_file_write_size 64k;\n        proxy_connect_timeout 10080s;\n        proxy_send_timeout 10080;\n        proxy_read_timeout 10080;\n        proxy_buffer_size 64k;\n        proxy_buffers 16 32k;\n        proxy_busy_buffers_size 64k;\n        proxy_redirect off;\n        proxy_request_buffering off;\n        proxy_buffering off;\n\n        location / {\n          proxy_pass http://frontend:3000;\n        }\n\n        location /static {\n          proxy_cache_valid 60m;\n          proxy_pass http://frontend:3000;\n        }\n\n        location /api {\n          proxy_pass http://public-api:8080;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n          root   /usr/share/nginx/html;\n        }\n      }\n    }\nkind: ConfigMap\nmetadata:\n  name: nginx-config\n",
            "yaml_incluster": "c19ab8f9af6a42cb667b915ae78c8c3ce44e6c3b7ff2242d54a2f1b1cdae5cd4"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 15,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/nginx",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "1c54710c6b99fdd928fddb29d2a0459f1e167cb29be4f3a36ca61233c43e99db",
            "live_uid": "7bdd11c3-3cff-4434-9aef-335d0855fc1c",
            "name": "nginx",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7bdd11c3-3cff-4434-9aef-335d0855fc1c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nginx\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: nginx\n",
            "yaml_incluster": "1c54710c6b99fdd928fddb29d2a0459f1e167cb29be4f3a36ca61233c43e99db"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 16,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/nginx",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "27d020c99b3f87494f0880b2e6d5535bf10ca010d532994d7d72f6fd36f0a1e5",
            "live_uid": "43bee0a3-06d0-49db-ae1b-1990a22bffad",
            "name": "nginx",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "43bee0a3-06d0-49db-ae1b-1990a22bffad",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: nginx\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: nginx\nspec:\n  protocol: http\n",
            "yaml_incluster": "27d020c99b3f87494f0880b2e6d5535bf10ca010d532994d7d72f6fd36f0a1e5"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 17,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/nginx",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "0de473a0c78fc528e28bbb2bc5f9da12c2b58e51c8f0b3ca2b73abf9e4527781",
            "live_uid": "19200d5d-c0a5-496b-9438-43410cc93bb1",
            "name": "nginx",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "19200d5d-c0a5-496b-9438-43410cc93bb1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: nginx\n      app: nginx\n  template:\n    metadata:\n      labels:\n        service: nginx\n        app: nginx\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: nginx\n      containers:\n        - name: nginx\n          image: nginx:stable-alpine\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: nginx-config\n              mountPath: /etc/nginx\n      volumes:\n        - name: nginx-config\n          configMap:\n            name: nginx-config\n            items:\n              - key: nginx.conf\n                path: nginx.conf",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n      service: nginx\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: nginx\n        service: nginx\n    spec:\n      containers:\n      - image: nginx:stable-alpine\n        name: nginx\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - mountPath: /etc/nginx\n          name: nginx-config\n      serviceAccountName: nginx\n      volumes:\n      - configMap:\n          items:\n          - key: nginx.conf\n            path: nginx.conf\n          name: nginx-config\n        name: nginx-config\n",
            "yaml_incluster": "0de473a0c78fc528e28bbb2bc5f9da12c2b58e51c8f0b3ca2b73abf9e4527781"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 18,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/payments",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "26042fbe5373efab569bd8dac07e5ef60f0642409fecf46ff69b34ce60138f22",
            "live_uid": "8fac68a3-e8da-4a9e-bd78-091f4d511ada",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8fac68a3-e8da-4a9e-bd78-091f4d511ada",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  selector:\n    app: payments\n  ports:\n    - name: http\n      protocol: TCP\n      port: 8080\n      targetPort: 8080",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  ports:\n  - name: http\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: payments\n",
            "yaml_incluster": "26042fbe5373efab569bd8dac07e5ef60f0642409fecf46ff69b34ce60138f22"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 19,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/payments",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "5c4d9cdbae19885bdc1eddc9cf2b2f2ab4ab399baab340069f10f692be9ebdf1",
            "live_uid": "9b3557bb-6abd-4c95-8cc6-e916bc32e2a9",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9b3557bb-6abd-4c95-8cc6-e916bc32e2a9",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: payments\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: payments\n",
            "yaml_incluster": "5c4d9cdbae19885bdc1eddc9cf2b2f2ab4ab399baab340069f10f692be9ebdf1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 20,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/payments",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "ac1a4c03dea69b808ae3e696c2d6c5cdc02bad1f2755e6a889640f1b17814854",
            "live_uid": "feb471e3-5309-460f-a9ee-eb06c44bc019",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "feb471e3-5309-460f-a9ee-eb06c44bc019",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: http\n",
            "yaml_incluster": "ac1a4c03dea69b808ae3e696c2d6c5cdc02bad1f2755e6a889640f1b17814854"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 21,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/payments",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "e1827bea4d0fd56d37b28ad5846454b6e773981a93c64811450d76691f592751",
            "live_uid": "6446ed1e-8a60-48ec-a76c-c29eca63e23e",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6446ed1e-8a60-48ec-a76c-c29eca63e23e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payments\n  labels:\n    app: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      labels:\n        app: payments\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: payments\n      containers:\n        - name: payments\n          image: hashicorpdemoapp/payments:v0.0.16\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: payments\n  name: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n      labels:\n        app: payments\n    spec:\n      containers:\n      - image: hashicorpdemoapp/payments:v0.0.16\n        imagePullPolicy: Always\n        name: payments\n        ports:\n        - containerPort: 8080\n      serviceAccountName: payments\n",
            "yaml_incluster": "e1827bea4d0fd56d37b28ad5846454b6e773981a93c64811450d76691f592751"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 22,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/product-api-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "a19ff83770810aa89b9a236126ae032327a5e4eb00dafa51816e8fbd09a81fcd",
            "live_uid": "05589384-db83-4f31-9654-860e9b8a9820",
            "name": "product-api-db",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "05589384-db83-4f31-9654-860e9b8a9820",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-api-db\n  labels:\n    app: product-api-db\nspec:\n  type: ClusterIP\n  ports:\n    - port: 5432\n      targetPort: 5432\n  selector:\n    app: product-api-db",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: product-api-db\n  name: product-api-db\nspec:\n  ports:\n  - port: 5432\n    targetPort: 5432\n  selector:\n    app: product-api-db\n  type: ClusterIP\n",
            "yaml_incluster": "a19ff83770810aa89b9a236126ae032327a5e4eb00dafa51816e8fbd09a81fcd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 23,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/product-api-db",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "3f53c107cc78eea40fba4e1b0c5edba08113c44e10bc781b8eba43bb6b244a7c",
            "live_uid": "dcac953f-c4e9-4dd0-af45-900135e8b4db",
            "name": "product-api-db",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "dcac953f-c4e9-4dd0-af45-900135e8b4db",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api-db\nspec:\n  protocol: \"tcp\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api-db\nspec:\n  protocol: tcp\n",
            "yaml_incluster": "3f53c107cc78eea40fba4e1b0c5edba08113c44e10bc781b8eba43bb6b244a7c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 24,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/product-api-db",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "22c70c087ab5cd271b31060563d457e0ca77d3d3480d856d6107a2962186d0aa",
            "live_uid": "5663ec61-c7a9-441c-a9bb-2e0450499498",
            "name": "product-api-db",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5663ec61-c7a9-441c-a9bb-2e0450499498",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: product-api-db\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: product-api-db\n",
            "yaml_incluster": "22c70c087ab5cd271b31060563d457e0ca77d3d3480d856d6107a2962186d0aa"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 25,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/product-api-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "341026ac537a51a2a0e1ff2dea935795fc52662d773a542a76040925e0eb477d",
            "live_uid": "275c2bcd-1f72-47bd-9d9a-0cf766b4f915",
            "name": "product-api-db",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "275c2bcd-1f72-47bd-9d9a-0cf766b4f915",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: product-api-db\n      app: product-api-db\n  template:\n    metadata:\n      labels:\n        service: product-api-db\n        app: product-api-db\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: product-api-db\n      containers:\n        - name: product-api-db\n          image: hashicorpdemoapp/product-api-db:v0.0.20\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: products\n            - name: POSTGRES_USER\n              value: postgres\n            - name: POSTGRES_PASSWORD\n              value: password\n          volumeMounts:\n            - mountPath: \"/var/lib/postgresql/data\"\n              name: \"pgdata\"\n      volumes:\n        - name: pgdata\n          emptyDir: {}",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api-db\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api-db\n      service: product-api-db\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: product-api-db\n        service: product-api-db\n    spec:\n      containers:\n      - env:\n        - name: POSTGRES_DB\n          value: products\n        - name: POSTGRES_USER\n          value: postgres\n        - name: POSTGRES_PASSWORD\n          value: password\n        image: hashicorpdemoapp/product-api-db:v0.0.20\n        imagePullPolicy: Always\n        name: product-api-db\n        ports:\n        - containerPort: 5432\n        volumeMounts:\n        - mountPath: /var/lib/postgresql/data\n          name: pgdata\n      serviceAccountName: product-api-db\n      volumes:\n      - emptyDir: {}\n        name: pgdata\n",
            "yaml_incluster": "341026ac537a51a2a0e1ff2dea935795fc52662d773a542a76040925e0eb477d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 26,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/product-api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "ece9e2d551024bd3366559d6394a88e27486a867482fd17ef5b5d50075debff4",
            "live_uid": "2534a44a-ad60-4c65-a9ab-7c3ccf7a5708",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2534a44a-ad60-4c65-a9ab-7c3ccf7a5708",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  selector:\n    app: product-api\n  ports:\n    - name: http\n      protocol: TCP\n      port: 9090\n      targetPort: 9090",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  ports:\n  - name: http\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: product-api\n",
            "yaml_incluster": "ece9e2d551024bd3366559d6394a88e27486a867482fd17ef5b5d50075debff4"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 27,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/product-api",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "c50abaf7384b528874ebb652445693fe1a2857923462c4ec45cd1de1c3b17eee",
            "live_uid": "cee2d45a-e5b0-4263-bcc9-ca40e750d7a4",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "cee2d45a-e5b0-4263-bcc9-ca40e750d7a4",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: product-api\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: product-api\n",
            "yaml_incluster": "c50abaf7384b528874ebb652445693fe1a2857923462c4ec45cd1de1c3b17eee"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 28,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/product-api",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "015feb5f3c23b58f03bb68a49515ba475af55a519a345e41053f5090f25440d3",
            "live_uid": "df1c52cf-e2d3-48a9-b237-4dc8b82a39f5",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "df1c52cf-e2d3-48a9-b237-4dc8b82a39f5",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: http\n",
            "yaml_incluster": "015feb5f3c23b58f03bb68a49515ba475af55a519a345e41053f5090f25440d3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 29,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/db-configmap",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "458039aa1cb2a0326981a4d479a2d23f46b90b29d938bd03e83a822d575b7453",
            "live_uid": "445adef3-fb91-4cce-ac0d-cd85d5b8cae1",
            "name": "db-configmap",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "445adef3-fb91-4cce-ac0d-cd85d5b8cae1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-configmap\ndata:\n  config: |\n    {\n      \"db_connection\": \"host=product-api-db port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  config: |-\n    {\n      \"db_connection\": \"host=product-api-db port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }\nkind: ConfigMap\nmetadata:\n  name: db-configmap\n",
            "yaml_incluster": "458039aa1cb2a0326981a4d479a2d23f46b90b29d938bd03e83a822d575b7453"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 30,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/product-api",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "d4a1445b953a28965635f06736a2de9a7b53202a1642986c3faa203eeffb5fbf",
            "live_uid": "f353fa40-d34c-45a8-95da-8258b61c4de9",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f353fa40-d34c-45a8-95da-8258b61c4de9",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api\n  labels:\n    app: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      labels:\n        app: product-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: product-api\n      volumes:\n        - name: config\n          configMap:\n            name: db-configmap\n            items:\n              - key: config\n                path: conf.json\n      containers:\n        - name: product-api\n          image: hashicorpdemoapp/product-api:v0.0.20\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 9090\n            - containerPort: 9103\n          env:\n            - name: \"CONFIG_FILE\"\n              value: \"/config/conf.json\"\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 9090\n            initialDelaySeconds: 15\n            timeoutSeconds: 1\n            periodSeconds: 10\n            failureThreshold: 30\n          volumeMounts:\n            - name: config\n              mountPath: /config\n              readOnly: true",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: product-api\n  name: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: product-api\n    spec:\n      containers:\n      - env:\n        - name: CONFIG_FILE\n          value: /config/conf.json\n        image: hashicorpdemoapp/product-api:v0.0.20\n        imagePullPolicy: Always\n        livenessProbe:\n          failureThreshold: 30\n          httpGet:\n            path: /health\n            port: 9090\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 1\n        name: product-api\n        ports:\n        - containerPort: 9090\n        - containerPort: 9103\n        volumeMounts:\n        - mountPath: /config\n          name: config\n          readOnly: true\n      serviceAccountName: product-api\n      volumes:\n      - configMap:\n          items:\n          - key: config\n            path: conf.json\n          name: db-configmap\n        name: config\n",
            "yaml_incluster": "d4a1445b953a28965635f06736a2de9a7b53202a1642986c3faa203eeffb5fbf"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 31,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/public-api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "dcb3959f0de649254f976f8494e89951d43c16cabc415ed6cedc44ffe1734f41",
            "live_uid": "bfdd2707-ce02-4a2f-9fdb-8b9ccbad0035",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "bfdd2707-ce02-4a2f-9fdb-8b9ccbad0035",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-api\n  labels:\n    app: public-api\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: 8080\n  selector:\n    app: public-api",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: public-api\n  name: public-api\nspec:\n  ports:\n  - port: 8080\n    targetPort: 8080\n  selector:\n    app: public-api\n  type: ClusterIP\n",
            "yaml_incluster": "dcb3959f0de649254f976f8494e89951d43c16cabc415ed6cedc44ffe1734f41"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 32,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/public-api",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "b6991cc1c8b2aa84f1b4889ab3b94e138a15d9a98d8ac0820851e91b68735ce1",
            "live_uid": "8c42ef8f-06e7-4717-a1ce-9d6a9d051b2b",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8c42ef8f-06e7-4717-a1ce-9d6a9d051b2b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: public-api\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: public-api\n",
            "yaml_incluster": "b6991cc1c8b2aa84f1b4889ab3b94e138a15d9a98d8ac0820851e91b68735ce1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 33,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/public-api",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "5f754bbf9046b0afdac7b454982a4e47a03829bdb34a0e61b2dae6a0ec822685",
            "live_uid": "fbfe42d0-f2d7-490e-b8a2-2126dbc2a362",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "fbfe42d0-f2d7-490e-b8a2-2126dbc2a362",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: http\n",
            "yaml_incluster": "5f754bbf9046b0afdac7b454982a4e47a03829bdb34a0e61b2dae6a0ec822685"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 34,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/public-api",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "a5370b48e8820366a1f369949dd8e88f8ea1c36720a224d84ee21a44d751b6dd",
            "live_uid": "c0bdf5f5-dcf4-4678-a328-8ee3c491f84f",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c0bdf5f5-dcf4-4678-a328-8ee3c491f84f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: public-api\n      app: public-api\n  template:\n    metadata:\n      labels:\n        service: public-api\n        app: public-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: public-api\n      containers:\n        - name: public-api\n          image: hashicorpdemoapp/public-api:v0.0.6\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n          env:\n            - name: BIND_ADDRESS\n              value: \":8080\"\n            - name: PRODUCT_API_URI\n              value: \"http://product-api:9090\"\n            - name: PAYMENT_API_URI\n              value: \"http://payments:1800\"\n        - name: jaeger-agent\n          image: jaegertracing/jaeger-agent:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 5775\n              name: zk-compact-trft\n              protocol: UDP\n            - containerPort: 5778\n              name: config-rest\n              protocol: TCP\n            - containerPort: 6831\n              name: jg-compact-trft\n              protocol: UDP\n            - containerPort: 6832\n              name: jg-binary-trft\n              protocol: UDP\n            - containerPort: 14271\n              name: admin-http\n              protocol: TCP\n          args:\n            - --reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250\n            - --reporter.type=grpc",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: public-api\n      service: public-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: public-api\n        service: public-api\n    spec:\n      containers:\n      - env:\n        - name: BIND_ADDRESS\n          value: :8080\n        - name: PRODUCT_API_URI\n          value: http://product-api:9090\n        - name: PAYMENT_API_URI\n          value: http://payments:1800\n        image: hashicorpdemoapp/public-api:v0.0.6\n        imagePullPolicy: Always\n        name: public-api\n        ports:\n        - containerPort: 8080\n      - args:\n        - --reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250\n        - --reporter.type=grpc\n        image: jaegertracing/jaeger-agent:latest\n        imagePullPolicy: IfNotPresent\n        name: jaeger-agent\n        ports:\n        - containerPort: 5775\n          name: zk-compact-trft\n          protocol: UDP\n        - containerPort: 5778\n          name: config-rest\n          protocol: TCP\n        - containerPort: 6831\n          name: jg-compact-trft\n          protocol: UDP\n        - containerPort: 6832\n          name: jg-binary-trft\n          protocol: UDP\n        - containerPort: 14271\n          name: admin-http\n          protocol: TCP\n      serviceAccountName: public-api\n",
            "yaml_incluster": "a5370b48e8820366a1f369949dd8e88f8ea1c36720a224d84ee21a44d751b6dd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.demo_app.data.kubectl_path_documents.manifests",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.helm_release.consul",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.eks_consul_client.local_file.helm_values",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "436973907597",
            "arn": "arn:aws:sts::436973907597:assumed-role/consul-eks-ec2-role/i-0967a40d0f0f62a60",
            "id": "436973907597",
            "user_id": "AROAWLPNMV2GSLNZVG6LB:i-0967a40d0f0f62a60"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_deny_log_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2675893060",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3709839417",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeInternetGateways"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-2:436973907597:cluster/consul-quickstart-1710151394779-eks",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWVhXRElybUQ2THN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBek1URXhNREV5TURSYUZ3MHpOREF6TURreE1ERTNNRFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIRHIxMSt6MzBrZG00TXFWMDluZGdEZVNwNHN5V2ViNHlybXhac0JkdCtmTnZET2F6SExNa2FzRTMKVEdEekpJQWtlZDZrZVViUzJibWpBVVRSN3RtUy94bnZ3Mk4rQ1V0eWY3SWRkV2w4cGx5N2lML2RYWlNyWmM0WQppSkdMc0pSc0VwenVMclhud2lOQmtBbVpwbkNzSElyMkZsWE5pL2NnWUh6SnJJWmZUSmVMUEJiS1Rxbk5tT1FVCkVUVXErNXhGeXVIRldUdFNWVmVmRWY5Q0Q3akdaNU1WQzlLUXQxazMrbkh3SXY2Mlo5T05XVFdRMmRQNEhRWVkKcWlzM29PVlNBcGVKSXdESENuWk5xbFdBZThzMHZFb1VhMVlqNmJXSHZOdyt2UGJjR3dsWVdlMTU4YmJKb2dFUQp2di83R1VSTGpWZjJOSzVSVEJjVjVxaEFWbEZEQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTml5UDNIZHlvcDhaYWpZWlZWNmc4SFFOeWNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1U5WnRUeHBEOAp4N2JkTUhUbXI4eUI2amdCclZlRXVDYXRKWXlsWDJZNWdIMVRzbTlOeGovMGxXSndxK25tOWVBNlY4bzlNZy9mCmJ2SithdGRoMVUvK1ZpVEdLeVYyQVoyR0ZHenVGNGRBWThzVGxDM1pNRzkralNGWFMxTkI5VVg4aXc0ai9tcGwKdGZFNElZbHVCQ0l6eXIxTzV1a3VuQU5qeGdJWFF4aTZqdlp4UjBUN1Z2eW10eDB1Z3g5Zm1MbmkyU2Y2WGNOSwpEYUdCK3I5RGREa1pNRjFkVjJXWDJ3RzZWUHhyVElrMTJhazZUektXR1pvMmdCSzVwaUZKYlg1RXZrbXE4MnFPCitJa1hxOEpMTVMwY3Zmc1VFOFVma0k0WlAzOXNaVGZDbW1SSXoyRWhqTS9DRmlXR2Y5OUo4NVZBTVJ1UmFyMkEKVi9jbGoxSlVPbHB3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "created_at": "2024-03-11 10:13:02.778 +0000 UTC",
            "enabled_cluster_log_types": null,
            "encryption_config": [],
            "endpoint": "https://E2292ED59FF3871FD49FD47FAE3A346F.gr7.us-east-2.eks.amazonaws.com",
            "id": "consul-quickstart-1710151394779-eks",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/E2292ED59FF3871FD49FD47FAE3A346F"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "consul-quickstart-1710151394779-eks",
            "platform_version": "eks.15",
            "role_arn": "arn:aws:iam::436973907597:role/consul-quickstart-1710151394779-eks20240311101234661000000003",
            "status": "ACTIVE",
            "tags": null,
            "tags_all": {},
            "timeouts": {
              "create": "30m",
              "delete": "15m",
              "update": "60m"
            },
            "version": "1.25",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-00d6a27c4bed5789c",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0822d6b9dc21ac4a4"
                ],
                "subnet_ids": [
                  "subnet-05387cd6a31b476b9",
                  "subnet-078739c603cd089af",
                  "subnet-0e171660ac85e38fa"
                ],
                "vpc_id": "vpc-05c997ca90a5e76d0"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_deny_log_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::436973907597:policy/consul-quickstart-1710151394779-eks-deny-log-group20240311101234652400000001",
            "description": "Deny CreateLogGroup",
            "id": "arn:aws:iam::436973907597:policy/consul-quickstart-1710151394779-eks-deny-log-group20240311101234652400000001",
            "name": "consul-quickstart-1710151394779-eks-deny-log-group20240311101234652400000001",
            "name_prefix": "consul-quickstart-1710151394779-eks-deny-log-group",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"logs:CreateLogGroup\",\"Effect\":\"Deny\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAWLPNMV2GQSAZH5K4R",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::436973907597:policy/consul-quickstart-1710151394779-eks-elb-sl-role-creation20240311101234656000000002",
            "description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
            "id": "arn:aws:iam::436973907597:policy/consul-quickstart-1710151394779-eks-elb-sl-role-creation20240311101234656000000002",
            "name": "consul-quickstart-1710151394779-eks-elb-sl-role-creation20240311101234656000000002",
            "name_prefix": "consul-quickstart-1710151394779-eks-elb-sl-role-creation",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:DescribeInternetGateways\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAWLPNMV2G7EY7MPDHG",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::436973907597:role/consul-quickstart-1710151394779-eks20240311101234661000000003",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2024-03-11T10:12:35Z",
            "description": "",
            "force_detach_policies": true,
            "id": "consul-quickstart-1710151394779-eks20240311101234661000000003",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "consul-quickstart-1710151394779-eks20240311101234661000000003",
            "name_prefix": "consul-quickstart-1710151394779-eks",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAWLPNMV2GQ7PL7KKP7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::436973907597:role/consul-quickstart-1710151394779-eks2024031110191690590000000b",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2024-03-11T10:19:17Z",
            "description": "",
            "force_detach_policies": true,
            "id": "consul-quickstart-1710151394779-eks2024031110191690590000000b",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "consul-quickstart-1710151394779-eks2024031110191690590000000b",
            "name_prefix": "consul-quickstart-1710151394779-eks",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAWLPNMV2GQP2YW6FUT"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks20240311101234661000000003-20240311101237538500000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "consul-quickstart-1710151394779-eks20240311101234661000000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks20240311101234661000000003-20240311101237544100000008",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "consul-quickstart-1710151394779-eks20240311101234661000000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks20240311101234661000000003-20240311101237533500000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "consul-quickstart-1710151394779-eks20240311101234661000000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_deny_log_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks20240311101234661000000003-20240311101237533500000005",
            "policy_arn": "arn:aws:iam::436973907597:policy/consul-quickstart-1710151394779-eks-deny-log-group20240311101234652400000001",
            "role": "consul-quickstart-1710151394779-eks20240311101234661000000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks20240311101234661000000003-20240311101237537600000006",
            "policy_arn": "arn:aws:iam::436973907597:policy/consul-quickstart-1710151394779-eks-elb-sl-role-creation20240311101234656000000002",
            "role": "consul-quickstart-1710151394779-eks20240311101234661000000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks2024031110191690590000000b-2024031110191976800000000e",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "consul-quickstart-1710151394779-eks2024031110191690590000000b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks2024031110191690590000000b-2024031110191976380000000d",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "consul-quickstart-1710151394779-eks2024031110191690590000000b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "consul-quickstart-1710151394779-eks2024031110191690590000000b-2024031110191974350000000c",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "consul-quickstart-1710151394779-eks2024031110191690590000000b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:security-group/sg-0822d6b9dc21ac4a4",
            "description": "EKS cluster security group.",
            "egress": [],
            "id": "sg-0822d6b9dc21ac4a4",
            "ingress": [],
            "name": "consul-quickstart-1710151394779-eks2024031110125160600000000a",
            "name_prefix": "consul-quickstart-1710151394779-eks",
            "owner_id": "436973907597",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "consul-quickstart-1710151394779-eks-eks_cluster_sg"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-eks-eks_cluster_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:security-group/sg-04b6b76a70ebe7c9a",
            "description": "Security group for all nodes in the cluster.",
            "egress": [],
            "id": "sg-04b6b76a70ebe7c9a",
            "ingress": [],
            "name": "consul-quickstart-1710151394779-eks20240311101251603400000009",
            "name_prefix": "consul-quickstart-1710151394779-eks",
            "owner_id": "436973907597",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "consul-quickstart-1710151394779-eks-eks_worker_sg",
              "kubernetes.io/cluster/consul-quickstart-1710151394779-eks": "owned"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-eks-eks_worker_sg",
              "kubernetes.io/cluster/consul-quickstart-1710151394779-eks": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-4021487439",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-0822d6b9dc21ac4a4",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-307707189",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0822d6b9dc21ac4a4",
            "self": false,
            "source_security_group_id": "sg-04b6b76a70ebe7c9a",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-1467018500",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-04b6b76a70ebe7c9a",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-3062280953",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-04b6b76a70ebe7c9a",
            "self": false,
            "source_security_group_id": "sg-0822d6b9dc21ac4a4",
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-2726176854",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-04b6b76a70ebe7c9a",
            "self": false,
            "source_security_group_id": "sg-0822d6b9dc21ac4a4",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-3118467048",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-04b6b76a70ebe7c9a",
            "self": false,
            "source_security_group_id": "sg-04b6b76a70ebe7c9a",
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0]",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://E2292ED59FF3871FD49FD47FAE3A346F.gr7.us-east-2.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWVhXRElybUQ2THN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBek1URXhNREV5TURSYUZ3MHpOREF6TURreE1ERTNNRFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIRHIxMSt6MzBrZG00TXFWMDluZGdEZVNwNHN5V2ViNHlybXhac0JkdCtmTnZET2F6SExNa2FzRTMKVEdEekpJQWtlZDZrZVViUzJibWpBVVRSN3RtUy94bnZ3Mk4rQ1V0eWY3SWRkV2w4cGx5N2lML2RYWlNyWmM0WQppSkdMc0pSc0VwenVMclhud2lOQmtBbVpwbkNzSElyMkZsWE5pL2NnWUh6SnJJWmZUSmVMUEJiS1Rxbk5tT1FVCkVUVXErNXhGeXVIRldUdFNWVmVmRWY5Q0Q3akdaNU1WQzlLUXQxazMrbkh3SXY2Mlo5T05XVFdRMmRQNEhRWVkKcWlzM29PVlNBcGVKSXdESENuWk5xbFdBZThzMHZFb1VhMVlqNmJXSHZOdyt2UGJjR3dsWVdlMTU4YmJKb2dFUQp2di83R1VSTGpWZjJOSzVSVEJjVjVxaEFWbEZEQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTTml5UDNIZHlvcDhaYWpZWlZWNmc4SFFOeWNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1U5WnRUeHBEOAp4N2JkTUhUbXI4eUI2amdCclZlRXVDYXRKWXlsWDJZNWdIMVRzbTlOeGovMGxXSndxK25tOWVBNlY4bzlNZy9mCmJ2SithdGRoMVUvK1ZpVEdLeVYyQVoyR0ZHenVGNGRBWThzVGxDM1pNRzkralNGWFMxTkI5VVg4aXc0ai9tcGwKdGZFNElZbHVCQ0l6eXIxTzV1a3VuQU5qeGdJWFF4aTZqdlp4UjBUN1Z2eW10eDB1Z3g5Zm1MbmkyU2Y2WGNOSwpEYUdCK3I5RGREa1pNRjFkVjJXWDJ3RzZWUHhyVElrMTJhazZUektXR1pvMmdCSzVwaUZKYlg1RXZrbXE4MnFPCitJa1hxOEpMTVMwY3Zmc1VFOFVma0k0WlAzOXNaVGZDbW1SSXoyRWhqTS9DRmlXR2Y5OUo4NVZBTVJ1UmFyMkEKVi9jbGoxSlVPbHB3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n  name: eks_consul-quickstart-1710151394779-eks\n\ncontexts:\n- context:\n    cluster: eks_consul-quickstart-1710151394779-eks\n    user: eks_consul-quickstart-1710151394779-eks\n  name: eks_consul-quickstart-1710151394779-eks\n\ncurrent-context: eks_consul-quickstart-1710151394779-eks\n\nusers:\n- name: eks_consul-quickstart-1710151394779-eks\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1beta1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"consul-quickstart-1710151394779-eks\"\n",
            "content_base64": null,
            "content_base64sha256": "SogFM466h7BqqqEVjHS2keEkIg22VelwdbAf2cADFlo=",
            "content_base64sha512": "0iqCmqOHxvtWVz/e4kWmN3BBROWJG+Tb1r9G3d0OrnXa/nmoOpPehliKu5ZSSSgHsqUGXZDL3+eQtkdk64cFaA==",
            "content_md5": "9035b88e40dc9970cb84ca30f8ad20bd",
            "content_sha1": "cc91ea5b84173bceb3ba3d6245420b513e3b96bc",
            "content_sha256": "4a8805338eba87b06aaaa1158c74b691e124220db655e97075b01fd9c003165a",
            "content_sha512": "d22a829aa387c6fb56573fdee245a637704144e5891be4dbd6bf46dddd0eae75dafe79a83a93de86588abb9652492807b2a5065d90cbdfe790b64764eb870568",
            "directory_permission": "0755",
            "file_permission": "0600",
            "filename": "./kubeconfig_consul-quickstart-1710151394779-eks",
            "id": "cc91ea5b84173bceb3ba3d6245420b513e3b96bc",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks[0].module.fargate",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks[0].module.node_groups",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "application",
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-2:436973907597:nodegroup/consul-quickstart-1710151394779-eks/hashicups2024031110192031740000000f/a6c71683-1173-adfc-11e4-53d3bcec6e94",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "consul-quickstart-1710151394779-eks",
            "disk_size": 100,
            "force_update_version": null,
            "id": "consul-quickstart-1710151394779-eks:hashicups2024031110192031740000000f",
            "instance_types": [
              "t3a.medium"
            ],
            "labels": null,
            "launch_template": [],
            "node_group_name": "hashicups2024031110192031740000000f",
            "node_group_name_prefix": "hashicups",
            "node_role_arn": "arn:aws:iam::436973907597:role/consul-quickstart-1710151394779-eks2024031110191690590000000b",
            "release_version": "1.25.16-20240307",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-hashicups2024031110192031740000000f-a6c71683-1173-adfc-11e4-53d3bcec6e94"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 3,
                "max_size": 3,
                "min_size": 3
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-05387cd6a31b476b9",
              "subnet-078739c603cd089af",
              "subnet-0e171660ac85e38fa"
            ],
            "tags": null,
            "tags_all": {},
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 1,
                "max_unavailable_percentage": 0
              }
            ],
            "version": "1.25"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_consul_client",
      "mode": "managed",
      "type": "helm_release",
      "name": "consul",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "consul",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "consul",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.14.0",
                "chart": "consul",
                "name": "consul",
                "namespace": "default",
                "revision": 1,
                "values": "{\"connectInject\":{\"consulNode\":{\"meta\":{\"terraform-module\":\"hcp-eks-client\"}},\"default\":true,\"enabled\":true,\"transparentProxy\":{\"defaultEnabled\":true}},\"externalServers\":{\"enabled\":true,\"hosts\":[\"consul-quickstart-1710151394779.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud\"],\"httpsPort\":443,\"k8sAuthMethodHost\":\"https://E2292ED59FF3871FD49FD47FAE3A346F.gr7.us-east-2.eks.amazonaws.com\",\"useSystemRoots\":true},\"global\":{\"acls\":{\"bootstrapToken\":{\"secretKey\":\"bootstrapToken\",\"secretName\":\"consul-quickstart-1710151394779-hcp\"},\"manageSystemACLs\":true},\"datacenter\":\"consul-quickstart-1710151394779\",\"enabled\":false,\"image\":\"hashicorp/consul-enterprise:1.14.11-ent\",\"name\":\"consul\",\"tls\":{\"enabled\":true}},\"ingressGateways\":{\"enabled\":true,\"gateways\":[{\"name\":\"ingress-gateway\",\"service\":{\"ports\":[{\"port\":8080}],\"type\":\"LoadBalancer\"}}]},\"server\":{\"enabled\":false}}",
                "version": "1.0.0"
              }
            ],
            "name": "consul",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "global:\n  enabled: false\n  name: consul\n  datacenter: consul-quickstart-1710151394779\n  image: \"hashicorp/consul-enterprise:1.14.11-ent\"\n  acls:\n    manageSystemACLs: true\n    bootstrapToken:\n      secretName: consul-quickstart-1710151394779-hcp\n      secretKey: bootstrapToken\n  tls:\n    enabled: true\n\n\nexternalServers:\n  enabled: true\n  hosts: [\"consul-quickstart-1710151394779.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud\"]\n  httpsPort: 443\n  useSystemRoots: true\n  k8sAuthMethodHost: https://E2292ED59FF3871FD49FD47FAE3A346F.gr7.us-east-2.eks.amazonaws.com\n\nserver:\n  enabled: false\n\nconnectInject:\n  transparentProxy:\n    defaultEnabled: true\n  enabled: true\n  default: true\n  consulNode:\n    meta:\n      terraform-module: \"hcp-eks-client\"\n\ningressGateways:\n  enabled: true\n  gateways:\n    - name: ingress-gateway\n      service:\n        type: LoadBalancer\n        ports:\n        - port: 8080\n"
            ],
            "verify": false,
            "version": "1.0.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.eks_consul_client.kubernetes_secret.consul_secrets",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_consul_client",
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "consul_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "bootstrapToken": "23f6d642-2fc3-01ce-3dcd-844ad638ed81"
            },
            "id": "default/consul-quickstart-1710151394779-hcp",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "consul-quickstart-1710151394779-hcp",
                "namespace": "default",
                "resource_version": "1618",
                "uid": "08610fce-8b05-4f4c-8c06-51c03649e6e4"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "bootstrapToken",
                  "type": "string"
                }
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_consul_cluster_root_token.token",
            "hcp_hvn.main",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_consul_client",
      "mode": "managed",
      "type": "local_file",
      "name": "helm_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "global:\n  enabled: false\n  name: consul\n  datacenter: consul-quickstart-1710151394779\n  image: \"hashicorp/consul-enterprise:1.14.11-ent\"\n  acls:\n    manageSystemACLs: true\n    bootstrapToken:\n      secretName: consul-quickstart-1710151394779-hcp\n      secretKey: bootstrapToken\n  tls:\n    enabled: true\n\n\nexternalServers:\n  enabled: true\n  hosts: [\"consul-quickstart-1710151394779.consul.84a48f4a-c37d-4644-8530-eced6584321a.aws.hashicorp.cloud\"]\n  httpsPort: 443\n  useSystemRoots: true\n  k8sAuthMethodHost: https://E2292ED59FF3871FD49FD47FAE3A346F.gr7.us-east-2.eks.amazonaws.com\n\nserver:\n  enabled: false\n\nconnectInject:\n  transparentProxy:\n    defaultEnabled: true\n  enabled: true\n  default: true\n  consulNode:\n    meta:\n      terraform-module: \"hcp-eks-client\"\n\ningressGateways:\n  enabled: true\n  gateways:\n    - name: ingress-gateway\n      service:\n        type: LoadBalancer\n        ports:\n        - port: 8080\n",
            "content_base64": null,
            "content_base64sha256": "vhNSH56MSBHLdTor0npL33V/VLZVNUSlCclPoDHIuzw=",
            "content_base64sha512": "ZaDDWZzZdF3NqYeqAcR6CjWFWLGpl30hOZDejKZg6IhsRcQEXzOYdhFgZ+jPNKpUqGcIDqeNw28Zqw1ZL2F9kQ==",
            "content_md5": "6ee65218830bd4722b5c67e588807034",
            "content_sha1": "f23f81f55b3c9c42dff69720d01d36024f22c0e6",
            "content_sha256": "be13521f9e8c4811cb753a2bd27a4bdf757f54b6553544a509c94fa031c8bb3c",
            "content_sha512": "65a0c3599cd9745dcda987aa01c47a0a358558b1a9977d213990de8ca660e8886c45c4045f339876116067e8cf34aa54a867080ea78dc36f19ab0d592f617d91",
            "directory_permission": "0755",
            "file_permission": "0600",
            "filename": "./helm_values_consul-quickstart-1710151394779",
            "id": "f23f81f55b3c9c42dff69720d01d36024f22c0e6",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "hcp_consul_cluster.main",
            "hcp_hvn.main",
            "module.eks.aws_autoscaling_group.workers",
            "module.eks.aws_autoscaling_group.workers_launch_template",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_deny_log_group",
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group",
            "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_launch_template.workers_launch_template",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_deny_log_group",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.kubernetes_config_map.aws_auth",
            "module.eks.local_file.kubeconfig",
            "module.eks.module.fargate.aws_eks_fargate_profile.this",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "module.eks.module.fargate.data.aws_partition.current",
            "module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.eks.module.node_groups.aws_launch_template.workers",
            "module.eks.module.node_groups.data.cloudinit_config.workers_userdata",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-03dbfb439f764a5ba",
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-03dbfb439f764a5ba",
            "instance": "",
            "network_border_group": "us-east-2",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "public_dns": "ec2-3-143-77-144.us-east-2.compute.amazonaws.com",
            "public_ip": "3.143.77.144",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-us-east-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:internet-gateway/igw-0dc0fa3aade14c416",
            "id": "igw-0dc0fa3aade14c416",
            "owner_id": "436973907597",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc"
            },
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-03dbfb439f764a5ba",
            "connectivity_type": "public",
            "id": "nat-0794ef8a7ce63d7ca",
            "network_interface_id": "eni-0df1c1c82b6a5ef99",
            "private_ip": "10.0.1.132",
            "public_ip": "3.143.77.144",
            "subnet_id": "subnet-02a828422033073d7",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-us-east-2a"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-078c12be3e00c5e451080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0794ef8a7ce63d7ca",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-078c12be3e00c5e45",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0dc0fa3aade14c416",
            "id": "r-rtb-0a17b7e90ab89e44a1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0a17b7e90ab89e44a",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:route-table/rtb-078c12be3e00c5e45",
            "id": "rtb-078c12be3e00c5e45",
            "owner_id": "436973907597",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-private"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:route-table/rtb-0a17b7e90ab89e44a",
            "id": "rtb-0a17b7e90ab89e44a",
            "owner_id": "436973907597",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-public"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-03c8a9261587e0298",
            "route_table_id": "rtb-078c12be3e00c5e45",
            "subnet_id": "subnet-0e171660ac85e38fa"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0ea19397f7fcd647e",
            "route_table_id": "rtb-078c12be3e00c5e45",
            "subnet_id": "subnet-078739c603cd089af"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0632663d424bd0fc1",
            "route_table_id": "rtb-078c12be3e00c5e45",
            "subnet_id": "subnet-05387cd6a31b476b9"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0d077a656c0082157",
            "route_table_id": "rtb-0a17b7e90ab89e44a",
            "subnet_id": "subnet-02a828422033073d7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0296c7a35f2c5d47d",
            "route_table_id": "rtb-0a17b7e90ab89e44a",
            "subnet_id": "subnet-0ab7c4be739b1e4d7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f46ecc33f0f33a09",
            "route_table_id": "rtb-0a17b7e90ab89e44a",
            "subnet_id": "subnet-063605f727a5f40bf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:subnet/subnet-0e171660ac85e38fa",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e171660ac85e38fa",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "436973907597",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-private-us-east-2a"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-private-us-east-2a"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:subnet/subnet-078739c603cd089af",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-078739c603cd089af",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "436973907597",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-private-us-east-2b"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-private-us-east-2b"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:subnet/subnet-05387cd6a31b476b9",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-05387cd6a31b476b9",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "436973907597",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-private-us-east-2c"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-private-us-east-2c"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:subnet/subnet-02a828422033073d7",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-02a828422033073d7",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "436973907597",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-public-us-east-2a"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-public-us-east-2a"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:subnet/subnet-0ab7c4be739b1e4d7",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0ab7c4be739b1e4d7",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "436973907597",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-public-us-east-2b"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-public-us-east-2b"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:subnet/subnet-063605f727a5f40bf",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-063605f727a5f40bf",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "436973907597",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc-public-us-east-2c"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc-public-us-east-2c"
            },
            "timeouts": null,
            "vpc_id": "vpc-05c997ca90a5e76d0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:436973907597:vpc/vpc-05c997ca90a5e76d0",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0d71967105b644a31",
            "default_route_table_id": "rtb-0e8f3801ad7173101",
            "default_security_group_id": "sg-057982d34b78696da",
            "dhcp_options_id": "dopt-0ef1bcb635dc94276",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-05c997ca90a5e76d0",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0e8f3801ad7173101",
            "owner_id": "436973907597",
            "tags": {
              "Name": "consul-quickstart-1710151394779-vpc"
            },
            "tags_all": {
              "Name": "consul-quickstart-1710151394779-vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": null
}
